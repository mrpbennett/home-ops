version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
  type: worker # Defines the role of the machine within the cluster.
  token: 9podca.pbbvf4giemrrwrz8 # The `token` is used by a machine to join the PKI of the cluster.
  # The root certificate authority of the PKI.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJ6aWcxTTRhQld2K2RvM1lLLzVaeDFNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTJNVE13T0RNMU5UZGFGdzB6TkRBMk1URXdPRE0xTlRkYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBYWxNdzR4bVMxUE5BdnJYUkJpdGlaU0hsRWUveS9ITVNQR0tsCmhRM2N2V0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVenh0Wlo1NGp3bjFWc2ZQOQpWVUdROWN1YWFqQXdCUVlESzJWd0EwRUF0UlFyWWVTSEllb2pmVkFYODNsVFBoRHRnOHlqOVdUK2oxdVAyWE13CkJRUkE0cWN5SHRETndIMy9JVzgvTWp1eEtqMHFvbEJVM0NEQkZZODM3Zys0QUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: ""
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.29.2 # The `image` field is an optional reference to an alternative kubelet image.
    defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
    disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.

    # The `extraMounts` field is used to add additional mounts to the kubelet container.
    extraMounts:
      - destination: /var/mnt/storage # Destination is the absolute path where the mount will be placed in the container.
        type: bind # Type specifies the mount kind.
        source: /var/mnt/storage # Source specifies the source path of the mount.
        # Options are fstab style mount options.
        options:
          - bind
          - rshared
          - rw

    # Provides machine specific network configuration options.
  network:
    hostname: talos-wk-1
    nameservers:
      - 192.168.4.100
      - 1.1.1.1
    interfaces:
      - deviceSelector:
          busPath: "0*" # Single Network Interface
        addresses:
          - 192.168.5.4/22 # static IP
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.4.1

  # Used to provide instructions for installations.
  install:
    disk: /dev/sda # The disk used for installations.
    image: ghcr.io/siderolabs/installer:v1.6.5 # Allows for supplying the image used to perform the installation.
    wipe: false # Indicates if the installation disk should be wiped at installation time.

  # Used to configure the machine's container image registry mirrors.
  registries:
    mirrors:
      personal_docker_registry:
        endpoints:
          - http://192.168.7.210:5000

    config:
      registry.insecure:
        tls:
          insecureSkipVerify: true

  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).
    stableHostname: true # Enable stable default hostname.
    apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
    diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
    # KubePrism - local proxy/load balancer on defined port that will distribute
    kubePrism:
      enabled: true # Enable KubePrism support - will start local load balacing proxy.
      port: 7445 # KubePrism port.

  # MachineDisks list example.
  disks:
    - device: /dev/sdb # The name of the disk to use.
      partitions:
        - mountpoint: /var/mnt/storage # Where to mount the partition.

# Provides cluster specific configuration options.
cluster:
  id: TnZJctrL_fkAAsR-zpibsgsvF4qsHAZTa0_VC1FDpb0= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  secret: 0PyX4919AcBjWtoZPmmwfZj7vMBaD0jmGFg8bw9xweg= # Shared secret of cluster (base64 encoded random 32 bytes).
  # Provides control plane specific configuration options.
  controlPlane:
    endpoint: https://192.168.5.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12

  token: e2qa2d.lv3q00uhm3ilp3ds # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.

  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRQnFkNThpMVl2UDUrSXRHVGszYkk2REFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNRFl4TXpBNE16VTFOMW9YRFRNME1EWXhNVEE0TXpVMQpOMW93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCQ1pKeXd3bWp6NXpGeU9XUml6akdzNENHdWRYUkVLeGhodmlPYzlLS0hnV1E2M1FJdjlGaHhLVFRHaE0Kd3ZOR1Q0ejlIYThGSGp1Z2RsdUdBU0o5T1RPallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVEVzZ0Z29sS3dsVGgyaWxNSUlJKzgwWEF4SWN3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQU10MEhSV3AKblZEbEQ1a3JBMnZHQzVldG5NNjJpYlZNMjJWMXdtSXBXb0tjQWlBYXJCeVEvbmVoNnlKUFpVNSsrNVJ6My9qZwp3OHlTV2tyZDBhaDBPV3JxWmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: ""
  # Configures cluster member discovery.
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes:
        disabled: true # Disable Kubernetes discovery registry.
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/

  externalCloudProvider:
    enabled: true
    manifests:
      - https://raw.githubusercontent.com/mrpbennett/home-ops/main/kubernetes/cluster/cluster-role-binding.yaml
