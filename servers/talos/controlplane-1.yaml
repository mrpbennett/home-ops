version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
  type: controlplane # Defines the role of the machine within the cluster.
  token: bicbvn.rraiiogqwyzgjy3m # The `token` is used by a machine to join the PKI of the cluster.
  # The root certificate authority of the PKI.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEF5cW9LR0p1Q1haSVF3WkIxMkVUeTRNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5ERXhNVGt3T1RFME16VmFGdzB6TkRFeE1UY3dPVEUwTXpWYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBKys4SStYamRIRUFVcmdjMCs4R0hYQkRnT1lOM2VuMzRJTC9yCjZCNDlORW1qWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVS0JmUHRmZVQwSDVlREJBTgptVlJWRWgxQUVCVXdCUVlESzJWd0EwRUF1cEUvL3Z3MTdLZU0xRnEvNDlmdExYOEFiK21IVlhHWFFuWGdFc1ZPClVlUGYvK09wcDA2dnd2N1l1OTNka1RBZExqMWtmUlk0MHhHcG9jMi9vYmF3QXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJSkVlNFN2OEJkUm9tek9kY0dFaEgwa2dIbDBNaFVRQjRvZEsyL0wvUjlQQQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []
  #   # Uncomment this to enable SANs.
  #   - 10.0.0.10
  #   - 172.16.0.10
  #   - 192.168.0.10

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.31.2 # The `image` field is an optional reference to an alternative kubelet image.
    defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
    disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.

    # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
    # clusterDNS:
    #     - 10.96.0.10
    #     - 169.254.2.53

    # # The `extraArgs` field is used to provide additional flags to the kubelet.
    extraArgs:
      rotate-server-certificates: true

    # # The `extraMounts` field is used to add additional mounts to the kubelet container.
    # extraMounts:
    #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
    #       type: bind # Type specifies the mount kind.
    #       source: /var/lib/example # Source specifies the source path of the mount.
    #       # Options are fstab style mount options.
    #       options:
    #         - bind
    #         - rshared
    #         - rw

    # # The `extraConfig` field is used to provide kubelet configuration overrides.
    # extraConfig:
    #     serverTLSBootstrap: true

    # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
    # credentialProviderConfig:
    #     apiVersion: kubelet.config.k8s.io/v1
    #     kind: CredentialProviderConfig
    #     providers:
    #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
    #           defaultCacheDuration: 12h
    #           matchImages:
    #             - '*.dkr.ecr.*.amazonaws.com'
    #             - '*.dkr.ecr.*.amazonaws.com.cn'
    #             - '*.dkr.ecr-fips.*.amazonaws.com'
    #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
    #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
    #           name: ecr-credential-provider

    # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
    # nodeIP:
    #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
    #     validSubnets:
    #         - 10.0.0.0/8
    #         - '!10.0.0.3/32'
    #         - fdc7::/16
  # Provides machine specific network configuration options.
  network:
    hostname: talos-cp-1
    nameservers:
      - 192.168.4.10
      - 1.1.1.1
    interfaces:
      - deviceSelector:
          busPath: "0*" # Single Network Interface
        addresses:
          - 192.168.5.1/22 # static IP
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.4.1
        vip:
          ip: 192.168.5.200
  # # `interfaces` is used to define the network interface configuration.
  # interfaces:
  #     - interface: enp0s1 # The interface name.
  #       # Assigns static IP addresses to the interface.
  #       addresses:
  #         - 192.168.2.0/24
  #       # A list of routes associated with the interface.
  #       routes:
  #         - network: 0.0.0.0/0 # The route's network (destination).
  #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
  #           metric: 1024 # The optional metric for the route.
  #       mtu: 1500 # The interface's MTU.
  #
  #       # # Picks a network device using the selector.

  #       # # select a device with bus prefix 00:*.
  #       # deviceSelector:
  #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
  #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
  #       # deviceSelector:
  #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
  #       #     driver: virtio # Kernel driver, supports matching by wildcard.
  #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
  #       # deviceSelector:
  #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
  #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
  #       #       driver: virtio # Kernel driver, supports matching by wildcard.

  #       # # Bond specific options.
  #       # bond:
  #       #     # The interfaces that make up the bond.
  #       #     interfaces:
  #       #         - enp2s0
  #       #         - enp2s1
  #       #     # Picks a network device using the selector.
  #       #     deviceSelectors:
  #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
  #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
  #       #           driver: virtio # Kernel driver, supports matching by wildcard.
  #       #     mode: 802.3ad # A bond option.
  #       #     lacpRate: fast # A bond option.

  #       # # Bridge specific options.
  #       # bridge:
  #       #     # The interfaces that make up the bridge.
  #       #     interfaces:
  #       #         - enxda4042ca9a51
  #       #         - enxae2a6774c259
  #       #     # A bridge option.
  #       #     stp:
  #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

  #       # # Indicates if DHCP should be used to configure the interface.
  #       # dhcp: true

  #       # # DHCP specific options.
  #       # dhcpOptions:
  #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

  #       # # Wireguard specific configuration.

  #       # # wireguard server example
  #       # wireguard:
  #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
  #       #     listenPort: 51111 # Specifies a device's listening port.
  #       #     # Specifies a list of peer configurations to apply to a device.
  #       #     peers:
  #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
  #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
  #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
  #       #           allowedIPs:
  #       #             - 192.168.1.0/24
  #       # # wireguard peer example
  #       # wireguard:
  #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
  #       #     # Specifies a list of peer configurations to apply to a device.
  #       #     peers:
  #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
  #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
  #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
  #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
  #       #           allowedIPs:
  #       #             - 192.168.1.0/24

  #       # # Virtual (shared) IP address configuration.

  #       # # layer2 vip example
  #       # vip:
  #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

  # # Used to statically set the nameservers for the machine.
  # nameservers:
  #     - 8.8.8.8
  #     - 1.1.1.1

  # # Allows for extra entries to be added to the `/etc/hosts` file
  # extraHostEntries:
  #     - ip: 192.168.1.100 # The IP of the host.
  #       # The host alias.
  #       aliases:
  #         - example
  #         - example.domain.tld

  # # Configures KubeSpan feature.
  # kubespan:
  #     enabled: true # Enable the KubeSpan feature.

  # Used to provide instructions for installations.
  install:
    disk: /dev/sda # The disk used for installations.
    image: factory.talos.dev/installer/88d1f7a5c4f1d3aba7df787c448c1d3d008ed29cfb34af53fa0df4336a56040b:v1.8.1 # Allows for supplying the image used to perform the installation.
    wipe: false # Indicates if the installation disk should be wiped at installation time.

    # # Look up disk using disk attributes like model, size, serial and others.
    # diskSelector:
    #     size: 4GB # Disk size.
    #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
    #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

    # # Allows for supplying extra kernel args via the bootloader.
    # extraKernelArgs:
    #     - talos.platform=metal
    #     - reboot=k

    # # Allows for supplying additional system extension images to install on top of base Talos image.
    # extensions:
    #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
  # Used to configure the machine's container image registry mirrors.
  registries:
    mirrors:
      192.168.5.100:
        endpoints:
          - http://192.168.5.100:5000

      registry.70ld.home:
        endpoints:
          - https://registry.70ld.home

    config:
      192.168.5.100:
        tls:
          insecureSkipVerify: true

      registry.70ld.home:
        tls:
          ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkekNDQVIyZ0F3SUJBZ0lSQU8ycHJ5Zi8rOGV6RmFmK09TWGVqTzB3Q2dZSUtvWkl6ajBFQXdJd0d6RVoKTUJjR0ExVUVBeE1RYlhrdGMyVnNabk5wWjI1bFpDMWpZVEFlRncweU5ERXdNalV4TVRVeU5UUmFGdzB5TlRBeApNak14TVRVeU5UUmFNQnN4R1RBWEJnTlZCQU1URUcxNUxYTmxiR1p6YVdkdVpXUXRZMkV3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFTUlZFNGhucm5nVVBvTGhnSU8vTytVM0hjS0FtN00xNGZYUnUva2FOQjMKZzZrQitoTXRTeERoV2ZSVnpGbzZkU1hscXdPZ1ZUWUlXaU5DY0p2Mml3eTRvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVTVnenVMQm93cEFVYUxMeTRTa1dqCjhCdm14ZUF3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQUxlSHhJZ1loUUREK0dQR05yOGdmbkM0bllicktjOXoKUDNGWHMvRXFyZWhPQWlCb2ZYanVuVlJGYmZjSTlEblptV2NZbGdmN2NTdWozbVMzdERxMFU1NG95UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  # # Specifies mirror configuration for each registry host namespace.
  # mirrors:
  #     ghcr.io:
  #         # List of endpoints (URLs) for registry mirrors to use.
  #         endpoints:
  #             - https://registry.insecure
  #             - https://ghcr.io/v2/

  # # Specifies TLS & auth configuration for HTTPS image registries.
  # config:
  #     registry.insecure:
  #         # The TLS configuration for the registry.
  #         tls:
  #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
  #
  #             # # Enable mutual TLS authentication with the registry.
  #             # clientIdentity:
  #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
  #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
  #
  #         # # The auth configuration for this registry.
  #         # auth:
  #         #     username: username # Optional registry authentication.
  #         #     password: password # Optional registry authentication.

  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).
    stableHostname: true # Enable stable default hostname.
    apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
    diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
    # KubePrism - local proxy/load balancer on defined port that will distribute
    kubePrism:
      enabled: true # Enable KubePrism support - will start local load balancing proxy.
      port: 7445 # KubePrism port.
    # Configures host DNS caching resolver.
    hostDNS:
      enabled: true # Enable host DNS caching resolver.
      forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.

    # # Configure Talos API access from Kubernetes pods.
    # kubernetesTalosAPIAccess:
    #     enabled: true # Enable Talos API access from Kubernetes pods.
    #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
    #     allowedRoles:
    #         - os:reader
    #     # The list of Kubernetes namespaces Talos API access is available from.
    #     allowedKubernetesNamespaces:
    #         - kube-system
  # Configures the node labels for the machine.
  nodeLabels:
    node.kubernetes.io/exclude-from-external-load-balancers: ""

  # # Provides machine specific control plane configuration options.

  # # ControlPlane definition example.
  # controlPlane:
  #     # Controller manager machine specific configuration options.
  #     controllerManager:
  #         disabled: false # Disable kube-controller-manager on the node.
  #     # Scheduler machine specific configuration options.
  #     scheduler:
  #         disabled: true # Disable kube-scheduler on the node.

  # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

  # # nginx static pod.
  # pods:
  #     - apiVersion: v1
  #       kind: pod
  #       metadata:
  #         name: nginx
  #       spec:
  #         containers:
  #             - image: nginx
  #               name: nginx

  # # Used to partition, format and mount additional disks.

  # # MachineDisks list example.
  # disks:
  #     - device: /dev/sdb # The name of the disk to use.
  #       # A list of partitions to create on the disk.
  #       partitions:
  #         - mountpoint: /var/mnt/extra # Where to mount the partition.
  #
  #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

  #           # # Human readable representation.
  #           # size: 100 MB
  #           # # Precise value in bytes.
  #           # size: 1073741824

  # # Allows the addition of user specified files.

  # # MachineFiles usage example.
  # files:
  #     - content: '...' # The contents of the file.
  #       permissions: 0o666 # The file's permissions in octal.
  #       path: /tmp/file.txt # The path of the file.
  #       op: append # The operation to use

  # # The `env` field allows for the addition of environment variables.

  # # Environment variables definition examples.
  # env:
  #     GRPC_GO_LOG_SEVERITY_LEVEL: info
  #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
  #     https_proxy: http://SERVER:PORT/
  # env:
  #     GRPC_GO_LOG_SEVERITY_LEVEL: error
  #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
  # env:
  #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

  # # Used to configure the machine's time settings.

  # # Example configuration for cloudflare ntp server.
  time:
    disabled: false
    servers:
      - time.cloudflare.com

  # # Used to configure the machine's sysctls.

  # # MachineSysctls usage example.
  # sysctls:
  #     kernel.domainname: talos.dev
  #     net.ipv4.ip_forward: "0"
  #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

  # # Used to configure the machine's sysfs.

  # # MachineSysfs usage example.
  # sysfs:
  #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

  # # Machine system disk encryption configuration.
  # systemDiskEncryption:
  #     # Ephemeral partition encryption.
  #     ephemeral:
  #         provider: luks2 # Encryption provider to use for the encryption.
  #         # Defines the encryption keys generation and storage method.
  #         keys:
  #             - # Deterministically generated key from the node UUID and PartitionLabel.
  #               nodeID: {}
  #               slot: 0 # Key slot number for LUKS2 encryption.
  #
  #               # # KMS managed encryption key.
  #               # kms:
  #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
  #
  #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
  #         # cipher: aes-xts-plain64

  #         # # Defines the encryption sector size.
  #         # blockSize: 4096

  #         # # Additional --perf parameters for the LUKS2 encryption.
  #         # options:
  #         #     - no_read_workqueue
  #         #     - no_write_workqueue

  # # Configures the udev system.
  # udev:
  #     # List of udev rules to apply to the udev system
  #     rules:
  #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

  # # Configures the logging system.
  # logging:
  #     # Logging destination.
  #     destinations:
  #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
  #           format: json_lines # Logs format.

  # # Configures the kernel.
  # kernel:
  #     # Kernel modules to load.
  #     modules:
  #         - name: brtfs # Module name.

  # # Configures the seccomp profiles for the machine.
  # seccompProfiles:
  #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
  #       # The `value` field is used to provide the seccomp profile.
  #       value:
  #         defaultAction: SCMP_ACT_LOG

  # # Configures the node annotations for the machine.

  # # node annotations example.
  # nodeAnnotations:
  #     customer.io/rack: r13a25

  # # Configures the node taints for the machine. Effect is optional.

  # # node taints example.
  # nodeTaints:
  #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
  id: lMDObWGDd0_7iUDrbOCZ4ZuAVeG9wA5XT_DiI1PkmQQ= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  secret: 5XfK2uSyzwF69s0S9UUmxiyz0eFn1YmnrSLiPKGckdY= # Shared secret of cluster (base64 encoded random 32 bytes).
  # Provides control plane specific configuration options.
  controlPlane:
    endpoint: https://192.168.5.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
  clusterName: talos # Configures the cluster's name.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12

    # # The CNI used.
    # cni:
    #     name: custom # Name of CNI to use.
    #     # URLs containing manifests to apply for the CNI.
    #     urls:
    #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
  token: a71bef.m11qhh6zuc8pg9de # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
  secretboxEncryptionSecret: QYqWSaM92j8eGw/RYHyZTQ4pqmJebPS+oJdhjmAsdFw= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU9GdUVMWS9JWU1kMVZxMFA2WjY5NHN3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREV4TVRrd09URTBNelZhRncwek5ERXhNVGN3T1RFMApNelZhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVFuVHArV2M3T1dNbGt0dUhCRDR5czFOQzZTckhiV1FjVjNWVStCcklidHhBcld0SGVteFNSTnlVVFQKQ3UxYmp2SytmRFJHUlpNQ1NETjBqNFczdTNORm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRU13WHVyclY2Nld2N3liZC9MeDN6NEtwbzB2TUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFEYmplaEsKaFduWVh0TlBYZ0ZwaXJwQXR0bHlId1Jad2JQdGl6S0tzUFhIU2dJaEFKb3gyTHk1WFRCbUozclhDc2RZVmE0NwpmSlNuSGFFa2dNa1V6ODZkYk5WTgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUdFK0ducXJpUno4QUI3QmdSMjZBeDN0VWdDdmZBdytPLzRodUJwZ1NLNzFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSjA2ZmxuT3psakpaTGJod1ErTXJOVFF1a3F4MjFrSEZkMVZQZ2F5RzdjUUsxclIzcHNVawpUY2xFMHdydFc0N3l2bncwUmtXVEFrZ3pkSStGdDd0elJRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
  aggregatorCA:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZVENDQVFhZ0F3SUJBZ0lSQUp6Y3lpTDQvSSsxUU56TUo4NXpHWjR3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5ERXhNVGt3T1RFME16VmFGdzB6TkRFeE1UY3dPVEUwTXpWYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVRtY0NjZjE5YnFXTi9aVUsvbm0vM2l6b1EzRURITmtBam5ubVBiUEFvcUtaQTBXeE5OCmVUZWJRV1ZHUzFIL3JqaVZtNjdFaHdTaG9NNHZVZTZXdXNJam8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGQU50M3JLdGx0VnM0WGlUQzJBMjVsTkZ4MHVDTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDCklRQzVyV1dJNXVhNEJTaHIvSy8xVjRPeVFJN0pLWEpwcDc2NXZmTk9URlJjOWdJaEFNTzZDY1o4bzRtUmUwOEMKUDlYUU9PajQ1NkFpYTV4T2JWK0ZTQm1zWiszdAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZINEFLNWNmbWI3ZzI2WUI1M3hmcStodC92V2k4b2QzVzJXOHI5UDFDb3JvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNW5Bbkg5Zlc2bGpmMlZDdjU1djk0czZFTnhBeHpaQUk1NTVqMnp3S0tpbVFORnNUVFhrMwptMEZsUmt0Ui82NDRsWnV1eEljRW9hRE9MMUh1bHJyQ0l3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded private key for service account token generation.
  serviceAccount:
    key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBejY0WW81N3RCOU9wYk9sR3lnb0o2NXZCdHFzRnFBUFBaRWVWUzJSMlJpZEduMzJECm85SmczbWRxN3h2QTZKVGxvT3hOVURreGF3Y1doTHBCYldya3QxN294bVJwSnQvN2VQKzcvRHFzMHVkSTZHOXQKWGRKdkRHdkZlL2kxVkZaVHQ5V2t3ajFTUXBQYWFrd2RwQ3gxUXovNjcxR2NBbFVGd1IwZ3RrTVQ0VzY1K0lpcApyREYyMW9lUFZrOE9kR3dqV0E5c1FIWG4yUmxyOUY3ODhTeXhOWUZQVzZOd0R0ZjZ6b3lSRmlnNGZvRkQvN1BBCjk2cE1RQzNyQnFVR1ovMW5kR1FWSkQ2R0FtamhFVmdrMWhrSVlIYnlYOW9KRmJ6d01zRVQ1aElEZkdZQWNWYzYKSGlHNDJCZVJQaDdLbHhscjkyaGJua1dHR3pyRTZJTlYxd1R3WXJvTW9xSSsvQ0txbTdOYjl4cVdaSnM2dzNFSwpwS0xNUmdOQnp2VEdQa0ZQNzVLMk5NUmNKQ2ZJUVIzS1ZwVG1PMzYxczBBRnNzSWMrTVVnTjBNbHd0eWFycXhnCit2aTBiWDJoYTU3SnRVODBwSzBDbkFzdkhWbXoyZXNyN3QyOXgzU2NWVCtjSDlwQzdCd25FQkxBMjhJdkZ2WkQKbE5oUjBzMFR4cUcxUW15eXR2RHZBK0g5eVN6UzhlK0tSWi9CTGVObWlQNDA0YkZzdmtNTjFGelg1ZDJNNTdrOQpmOGozRFpvUFdGZmx1MzRxbjlzTTRyTUsvTERza0JlR1pKS3RrOG0wVXozQWNZaGI4SHRRSlFId2l2Qy9udXJ3CkFPSjkxRGY2UTEySUxtYXp5QjA2SHNLdSs4UVBKeVhnYTMrVDRpZnN5cU82TzNDaG1kcFBnemphSkVrQ0F3RUEKQVFLQ0FnQWMzLy9kQUFQRXl0RUxxNE9FSTlFdFNRS3QreWxXS3ZGeTUrRUNFbjIvVTBhbWRqVVBXZmpOODJNUwp5N0VPcFdVbjhyTHRMSWFLY3ZuV2ltNytYNVpkU0h6azJLRW1IbzVBVEk0K2k0bnI2T3hpSk52MzU0STVIK0xkClViOGtjcnhCR3h0RlJuRmhnRjBsMmw5a3JDbkJwK3VqeXB6K1ZnUHV6Ylgyb1d6cU14TDRVMGdFQVB5YzUwd3UKbTk5T29KcHBhL3VKR3R1WmU4ZGV1clpBY2c1UmVpRW1oSnJYOVgrUnFFbWo0d08zMHhFNVJDellRbjFIanhyVwpXYXVDV2VGQWRZbmErRFo1cjB0YnRmMnBKdUhiUjY1N1ZUMWVJRjdsTDZNc29lU0tMMFJ3ZmNnKzJFRnpDaFBQCnAwaFRxZDB4RVBsc0VBNk5TcWFHRFh5cDRLM3JTK1FtbEtxMjR1WHBXcnU3Z25FUmFkVHBtOW5Ec2RsSmcvc2cKSGQvQm0rRFJPYlhzYlFaaTVQeWxOaTB2QnRvMWVGekpxYmlxRFBkaHNsOTU1bTRmMkl1eXBGQi9BaGl1dFc4aApQeHR5VTVxRm54UjlGNTNHNjE1TzQvUG40dXdXaVVCbXNuY2Z4REVIUmpibEYrV2p1M0xLUlBVSlFVV081UExnCnFpTEZIc3V4b2NMUmhVbnVIbnNIWlozUDcwRVRieXBuSEpweUkybUZaK3RWYUdkeGxaSGtza28wMG1kZURKcHAKWFlyNkwwTDFBai9aYzBsdXZYcFBSaUlyK3V5SVc3S25Qcjd3UnQvQktWRGVsY1B6aVh4cGtTS1dlRTRTckZvRgpQUDRCMnJkS1hyZUxqMkJBcGUzallsVUxaaEhHb3YvRHRCZUo4UzNYam1oSk5URUFZUUtDQVFFQTlZekdCTEh1CkpOSFc4OFJHTW1raHBQVjduMlhHdy9NcmI4Mm5qYXBhZktaWWQ4ZDlyOGNhdy9ZNXNkRlByYnBQQ0x6SkRwVnUKaThrcElHSW9hZndOZUpwdkhhMks1RlZMVEpVRU14a1ZiOER1dUtMdG51K3pKY1JZQ3JpR1IyRHdOaVkxQ09sKwo5bzJOeDNGVU5HZ1grYmRrdkovU0FUQTVPSDlxWDVmWGdQL1FybFdrZm1ubFE5N3NkTitJeEczOWZDdHN2NjZ1CkZiQVAxbFRSNG5EZTBiY2hmNURUY2paNnJIMEFmb3ZqcnVySVNpeEs3TkdEdnpNV1padUVKMmV4eTdpWTFzNTEKMEFJaDhSdFp3NktqdDZaay9rSnkvRDVJdW9Pd2FtNFlUOVlyZi9wRGJaak9FaVluUi8zd0RPVms5YXhFK2dWaQp0NGl3cFB2ZWpsQlRhd0tDQVFFQTJJUzhyVDlwd3BtM2VETi9ndWduQXEzcjN3amxvcktUV1J4aUNXTmdvY0c0CmhmRUQzVy8wS3ZndEdoZmx3QWRrTDFXdTVoUTc5blNwMWJUeWxtaXdlN25QTFlSZXMwamNIcTNSVk51RFd1N1kKRXFncFFCMUs3ZU9JRzBKTnBqVjNrbE9EczMvK3Z0TmpoWWl3Y0paNHJ1TDRXMTk4RnNWeHVrb0lTRS9JMDJicgpScjZYSUVjbTRHRlFUajQvaGh6eVhQUHBCdmNRMUxrUDdmQW1qeXN2bGpCSjBQZkVlN2crd2JzVTMwd2o4SmdOClhKaktlMHlGSEorNEtsank3a3IxdzYrdFU2ckRKSFZ6ZTRvMGQvNzU4ek0yWmJUQjlrMmUrZGo1UGhSLzdpYjMKQmU3aE5OYkx3Rlg0Y1luOXVHK21NV1hlVlk0K1N6Skp2Qyt4VXRJSUd3S0NBUUE5M3ErU1JVYnM3aGFNSzF0SQpubWJFeXJuUWF2T1BNZmt5M1kyblMxSXJjRHFBUzdxbWpMTjR4dFM0c2pXeVgyeEVsbFRPb09aT3dHdmxaZllxCjVrQjZyK2JwZ20ycHBMZ3BYcTdGTlQvS2ZjRm9zbHpQSERSMmdxZHdaQmdwYWdwOGlsbjRtZVRNdU5RTmVjZXUKd0wreHd2elY3aXNhODR5bmFLdGoxTDJQR21YNVYwandOVHg0UW5ZdjZKYnNiNDVjT0JEWnAyamp2QTN4Z2tPMApHNTU1RnZ5UXlPd09MaDN3MGpwS3FITEJBeFZlWXhTcDRReWlJM3cwTStBemtaUWg4YXhKQzVKeHkrZkRlWkcvCmtuNVA2dFF0b0k2YWNoTWZNOGxDdCtUV1VPOTYrcEw4elhDMjcvZ2IwcWNtaUxKTW1KQjBzdUN4di9aS1M5QkMKNllockFvSUJBUURKSmovM0grT01RNng4UWpPakZUUXd2QTFXcm5oUU4yREd0NlNvbmllRy8yY0RJSTc3cU9lSgpCL2sydFo3ZlVMNlZieC9HWm1QeXFoMmlDYklaWS9jWmF0ejdwMjhuVm5nUkZHQldXbnprL09IR0syM3ZQNGQrCkRCVkZaY3Fuc0NKKzBaR1lNRUFsWGxPbUdmLzVDUUhqVDc5MWUvYlhYT1UwTVZVU2dQVE0yVitZNExXYjZoNUcKOUlGYnYxN2FwSWZSTFZSL0FRY2s2U3pRVzN3bkkvTFlyOUhVRG1yK21ZUE1EWmJ0Z0ZvZlNkT1lBK2FRdDkwdQpZMy8vNzVUNUpyQzk5TGFzOVFiSUYwbUxLekZsalg3K25zUlpwcDFQeW5yNEdNZ3RFWFJzZHN5bE9YRUYyc3Q5Cnl5Qzlzbm9CWDlCaE1nZGxLbm5hK0VRaVRaaUtuYytqQW9JQkFEaWFsbysxQTlOenR4aXdaUzZpYmxabnJtNE4KWFpVeTJRL2RPaDh3dFZQY295WDVHZDdLMXNYK0J0SURxOE16TldEdVFSRzRSM3VmRzlJblVicUxKUnA1WnNPbgpwMkU1TktEbElmang3eXVIM3BvOXJIZVFVZFR1UGdDejJ2akE4cHFQTUE4RlQrSDFUY3YyQWJyY0tXWGFPbHQ3CitGM05xTExUM2dJU2dHWEV5SjdtQno2QXNmM0pJdGNONEVmMFpvMGpMOG5ZS2Q1T1Q2K05sT2VPdVpOczAvdSsKV2kvU0x4emFYaCtGK0xyNENBbnZmMGtkZndMaGJoSlA0RjRUTGtyQXJOa0lROWhDaTZzOXFxRkhZOCsyRHFvUQpKbUN3dTlwaVFjcENhOUd4Y2tTSHRPTHpPay85Qi9jQ1FpblZuSkpFOG5hQnBCaEk0eU5lUzVZMnFsVT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
  # API server specific configuration options.
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.31.2 # The container image used in the API server manifest.
    # Extra certificate subject alternative names for the API server's certificate.
    certSANs:
      - 192.168.5.200
    disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
    # Configure the API server admission plugins.
    admissionControl:
      - name: PodSecurity # Name is the name of the admission controller.
        # Configuration is an embedded configuration object to be used as the plugin's
        configuration:
          apiVersion: pod-security.admission.config.k8s.io/v1alpha1
          defaults:
            audit: restricted
            audit-version: latest
            enforce: baseline
            enforce-version: latest
            warn: restricted
            warn-version: latest
          exemptions:
            namespaces:
              - kube-system
              - longhorn-system
              - monitoring
              - redis-cluster
            runtimeClasses: []
            usernames: []
          kind: PodSecurityConfiguration
    # Configure the API server audit policy.
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  # Controller manager server specific configuration options.
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.31.2 # The container image used in the controller manager manifest.
  # Kube-proxy server-specific configuration options
  proxy:
    image: registry.k8s.io/kube-proxy:v1.31.2 # The container image used in the kube-proxy manifest.

    # # Disable kube-proxy deployment on cluster bootstrap.
    # disabled: false
  # Scheduler server specific configuration options.
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.31.2 # The container image used in the scheduler manifest.
  # Configures cluster member discovery.
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes:
        disabled: true # Disable Kubernetes discovery registry.
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/
  # Etcd specific configuration options.
  etcd:
    # The `ca` is the root certificate authority of the PKI.
    ca:
      crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNPZ0F3SUJBZ0lRUWp5OEp6VzUvWThYT3dHd2Q4d2RCekFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkwTVRFeE9UQTVNVFF6TlZvWERUTTBNVEV4TnpBNU1UUXpOVm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkhYK1pPSE5RYkx6CitHWlJYRFF5ZWdOTlpKZWxYTExpWmRUN3A3SFFJQlpiY1VkNlptYjRyU1ozbWMrYWdQRmtuT3FxQWdGSUhyYTQKbFdMMTQ1Y3V0NnlqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVdDltTGNURk9xN3psCkx5Sk13NWd3ZmVPcFc0RXdDZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBTXltak8zcGVSNDF6bFRueTNuUzVSSnQKRHV3RDNpK0dXNFlCNG5Pak1vLzdBaUVBaDJ3b013ekxMS1pmdTJNUWdKSEhDdVpJRS9vZU5FZUIxQkFvVnYyOApPV1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUREU29aZ09rRHh4alRkYXl0MEVhM3lGUW1yNkpRTnR0azc4TTJuMFB1anNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZGY1azRjMUJzdlA0WmxGY05ESjZBMDFrbDZWY3N1SmwxUHVuc2RBZ0ZsdHhSM3BtWnZpdApKbmVaejVxQThXU2M2cW9DQVVnZXRyaVZZdlhqbHk2M3JBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=

    # # The container image used to create the etcd service.
    # image: gcr.io/etcd-development/etcd:v3.5.16

    # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
    # advertisedSubnets:
    #     - 10.0.0.0/8
  # A list of urls that point to additional manifests.
  extraManifests:
    - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/main/deploy/standalone-install.yaml
    - https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
  #   - https://www.example.com/manifest1.yaml
  #   - https://www.example.com/manifest2.yaml

  # A list of inline Kubernetes manifests.
  inlineManifests: []
  #   - name: namespace-ci # Name of the manifest.
  #     contents: |- # Manifest contents as a string.
  #       apiVersion: v1
  #       kind: Namespace
  #       metadata:
  #       	name: ci

  # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

  # # Decryption secret example (do not use in production!).
  # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

  # # Core DNS specific configuration options.
  # coreDNS:
  #     image: registry.k8s.io/coredns/coredns:v1.11.3 # The `image` field is an override to the default coredns image.

  # # External cloud provider configuration.
  # externalCloudProvider:
  #     enabled: true # Enable external cloud provider.
  #     # A list of urls that point to additional manifests for an external cloud provider.
  #     manifests:
  #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
  #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

  # # A map of key value pairs that will be added while fetching the extraManifests.
  # extraManifestHeaders:
  #     Token: "1234567"
  #     X-ExtraInfo: info

  # # Settings for admin kubeconfig generation.
  # adminKubeconfig:
  #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).

  # # Allows running workload on control-plane nodes.
  # allowSchedulingOnControlPlanes: true
