version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
  type: controlplane # Defines the role of the machine within the cluster.
  token: bhf0pa.wglsvhd9kdxnz9ib # The `token` is used by a machine to join the PKI of the cluster.
  # The root certificate authority of the PKI.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBbGs0NGRsbFBlZDZCS1BWZzM4em44ekFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qUXdOVEl4TURreE5ESTJXaGNOTXpRd05URTVNRGt4TkRJMldqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUR1dk9XOTZvMUZhMXpuM200ZTNPYkpoTStDQ3NlTjdhdVZHCkxjUDhqbk9ubzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkI0NS9QWmlrWFlsL3k3eApPYkhSSHcwRjJ0OENNQVVHQXl0bGNBTkJBTGoyYnVNbXlxRk9LeUtLOW9aQWEvOHI3dDNobWk5OUJ5OFJtNEtKClRFZjI2a2poTzB5SjlNUjc1QXJtcmNhVXVVR2NDcU9aUnhMdDJycDVBV3VCS2cwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQWtqMXJaRHZUa3dLTmNuZjhWVHZaRC8veGZ1d3ErUFhQNTgwVmw1b1kvawotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.29.2 # The `image` field is an optional reference to an alternative kubelet image.
    defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
    disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.

  # Provides machine specific network configuration options.
  network:
    hostname: talos-cp-3
    nameservers:
      - 192.168.4.2
      - 1.1.1.1
    interfaces:
      - deviceSelector:
          busPath: "0*" # Single Network Interface
        addresses:
          - 192.168.5.3/22 # static IP
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.4.1
        vip:
          ip: 192.168.5.200 # Specifies the VIP address to be used.
  time:
    servers:
      - time.cloudflare.com

  # Used to provide instructions for installations.
  install:
    disk: /dev/sda # The disk used for installations.
    image: ghcr.io/siderolabs/installer:v1.6.5 # Allows for supplying the image used to perform the installation.
    wipe: false # Indicates if the installation disk should be wiped at installation time.

  # Used to configure the machine's container image registry mirrors.
  registries: {}

  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).
    stableHostname: true # Enable stable default hostname.
    apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
    diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
    # KubePrism - local proxy/load balancer on defined port that will distribute
    kubePrism:
      enabled: true # Enable KubePrism support - will start local load balacing proxy.
      port: 7445 # KubePrism port.

# Provides cluster specific configuration options.
cluster:
  id: WkykF7kpb97x-PNHgtehpZaQEWhzr7_o6FpI5U20q4E= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  secret: dYsJJR6QbuUDTLi5MSOPchW77t9PI7Yv0Tk5OsF+Rc8= # Shared secret of cluster (base64 encoded random 32 bytes).
  # Provides control plane specific configuration options.
  controlPlane:
    endpoint: https://192.168.5.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
  clusterName: talos-cluster # Configures the cluster's name.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12

  token: hze06v.7jvie4xjg32bcpjb # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
  secretboxEncryptionSecret: OireSRZdvP/9UrQcpp4pW0atnVjqm1D1VPJO0ogGDiM= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQUtDTTBZRXBqbE9NKzJmRzdHQ29Wa3N3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREExTWpFd09URTBNalphRncwek5EQTFNVGt3T1RFMApNalphTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNLMzMrRytzVVl2N05JUThJd2JGalVzVlNYOFJrZHhiMWNvK0o2Qmw2dE1Da2RnZmo3QnlzN1FZSUsKbk5aVHdnRlpta2xaRmJwbTF5V2hDdkdhQVNGTW8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGTmRWVnBXSGhYNFZaM3Jwd3N0UWhja3pSNWZlTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFEd3E1NlEKc0dHeEg5SFZMb3A3RGlZTFZ3SWxaUGJXeWxvVC9RTCt1RVZ1M2dJaEFJOVYxYzVTTmhHekJzRnBxeDFxbHhmegphSGpyTVVCTTBtcS9mOFpVT1JIWgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVjQVN3bFpVcWlrTFliSCtYS3VVTVRRdWY4OFhzNVV5NTJlVVJrNEQrNlFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaXQ5L2h2ckZHTCt6U0VQQ01HeFkxTEZVbC9FWkhjVzlYS1BpZWdaZXJUQXBIWUg0K3djcgpPMEdDQ3B6V1U4SUJXWnBKV1JXNlp0Y2xvUXJ4bWdFaFRBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
  aggregatorCA:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFXZ0F3SUJBZ0lRSTdRN2pDNXV2QkduTkVhYWpRb1FCekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EVXlNVEE1TVRReU5sb1hEVE0wTURVeE9UQTVNVFF5Tmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCQ1VnQ2tPTmVIcjNvZGxtUjI1bDdiR3RoSVM4TXFna294RkpkbVZCMFRySjVHdGVaRXlLClF5cXdXTHd4UXdkSkNTR3h6T2VySVFEdGhJdjJjNjg2V1h1allUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVU2N0lKT282RmdpaEJyM29GK05JckZzSmo4N2N3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loCkFMTjJJa25lUnJNMXc3Wmo3NU9pSU81elNxeXNJY1IyT0QvNUNXZW1adTFnQWlFQXlmTTdTTElhU0FTL0RzajgKYlh5V29udXVVQ2tFOE93MjRUUXlxMHNUU29JPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFyY1pQQ2Erc2JubWZncG5rZVVKdjRMOTdMYjltem5kSXJnTEVaNk5UZHRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSlNBS1E0MTRldmVoMldaSGJtWHRzYTJFaEx3eXFDU2pFVWwyWlVIUk9zbmthMTVrVElwRApLckJZdkRGREIwa0pJYkhNNTZzaEFPMkVpL1p6cnpwWmV3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded private key for service account token generation.
  serviceAccount:
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUlyM2VvT0JzeG9Ca3dlUFdTNVBtM0xzQ2ZDUitlVGZGWjdaQWE5Znl6MUlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTnBpNVFJWk1JcFRRREN2b3lCVjB4MU9oUGdOdHc2UDZTcmFhU2Fmc0xLZXpCUXdYR1VRaApVbWJ5emVQYkVHdVFjNm11ZnRJaHFXc09lSU9FTnhUV1d3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # API server specific configuration options.
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.29.2 # The container image used in the API server manifest.
    # Extra certificate subject alternative names for the API server's certificate.
    certSANs:
      - 192.168.5.200
    disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
    # Configure the API server admission plugins.
    admissionControl:
      - name: PodSecurity # Name is the name of the admission controller.
        # Configuration is an embedded configuration object to be used as the plugin's
        configuration:
          apiVersion: pod-security.admission.config.k8s.io/v1alpha1
          defaults:
            audit: restricted
            audit-version: latest
            enforce: baseline
            enforce-version: latest
            warn: restricted
            warn-version: latest
          exemptions:
            namespaces:
              - kube-system
            runtimeClasses: []
            usernames: []
          kind: PodSecurityConfiguration
    # Configure the API server audit policy.
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  # Controller manager server specific configuration options.
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.29.2 # The container image used in the controller manager manifest.
  # Kube-proxy server-specific configuration options
  proxy:
    image: registry.k8s.io/kube-proxy:v1.29.2 # The container image used in the kube-proxy manifest.

    # # Disable kube-proxy deployment on cluster bootstrap.
    # disabled: false
  # Scheduler server specific configuration options.
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.29.2 # The container image used in the scheduler manifest.
  # Configures cluster member discovery.
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes:
        disabled: true # Disable Kubernetes discovery registry.
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/
  # Etcd specific configuration options.
  etcd:
    # The `ca` is the root certificate authority of the PKI.
    ca:
      crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNPZ0F3SUJBZ0lRUGVGMXdVN0svZFlIVDZiRUk3ZmREVEFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkwTURVeU1UQTVNVFF5TmxvWERUTTBNRFV4T1RBNU1UUXlObG93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkYxOU54eTluMXdNCm1iVm1mN1FROGUxclpMeDBnbTc4WGZKS3lyWHYzYmVjK0ZmNnAxbE1pTWp0ZU41MjRRaGlpa1NSc3I1a2NSV24KTHBlNUk1S2FSeTJqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZlNqcVVoUzN5Uk1tCkpubWdOdkVSSnlPbDA4c3dDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdFdFdwenhDUCtIeDF2czE4czkxZ294a3AKcGNJaWM3UUROSW1oazFpd2RWa0NJUUNKUnlLNDFOWkt1TmNwUENneWkzNy9MeGRyM3ErbFVSYmh5a0xIcDBuWgpPdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU01U3EvUG1wbWFIbDVDTTJuMVh5bDU4QjU0cHZOOG1sZkkzWTRBSmdUaWVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFWFgwM0hMMmZYQXladFdaL3RCRHg3V3RrdkhTQ2J2eGQ4a3JLdGUvZHQ1ejRWL3FuV1V5SQp5TzE0M25iaENHS0tSSkd5dm1SeEZhY3VsN2tqa3BwSExRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=

  # A list of urls that point to additional manifests.
  extraManifests: []
  inlineManifests: []
