version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
  type: controlplane # Defines the role of the machine within the cluster.
  token: spc5kq.bndftifqqdyldm4h # The `token` is used by a machine to join the PKI of the cluster.
  # The root certificate authority of the PKI.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBb2toQXdDYzd5Rm1wMTlEeWU0MElCekFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qUXdNekV5TVRJMU9ESTFXaGNOTXpRd016RXdNVEkxT0RJMVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUY3TERkOVUwRWRVeW1zWGk4N1dYdGd0eUZCa0ZZWW1QR3FtCmFod3QwcXJHbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkFXdGNjUzQ4elExY1o0RApaTWFoTm4yWURCMm9NQVVHQXl0bGNBTkJBS2wrS0dFY0NIbGpZN21nQlB5TElPZ0g1Tld1Yi8yQmZGNnlIVE84CnNwa0NDcFowN2VhUWhGT1BXYk0yTmI2Q0tRaFpZelkvajV3RlR1Uk5aZk1jOEFRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQnlqa1lLVzlVNXV2RGJNblBkcEN4dGorNGdhUml5R3BzN1MwTDdXeGdRRgotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.29.2 # The `image` field is an optional reference to an alternative kubelet image.
    defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
    disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.

  network:
    hostname: talos-cp-3
    nameservers:
      - 192.168.4.2
      - 1.1.1.1
    interfaces:
      - deviceSelector:
          busPath: "0*"
        addresses:
          - 192.168.5.3/22
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.4.1
        vip:
          ip: 192.168.5.200 # Specifies the IP address to be used.

  time:
    servers:
      - time.cloudflare.com

  # Used to provide instructions for installations.
  install:
    disk: /dev/sda # The disk used for installations.
    image: ghcr.io/siderolabs/installer:v1.6.5 # Allows for supplying the image used to perform the installation.
    wipe: false # Indicates if the installation disk should be wiped at installation time.

  # Used to configure the machine's container image registry mirrors.
  registries: {}

  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).
    stableHostname: true # Enable stable default hostname.
    apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
    diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
    # KubePrism - local proxy/load balancer on defined port that will distribute
    kubePrism:
      enabled: true # Enable KubePrism support - will start local load balacing proxy.
      port: 7445 # KubePrism port.

# Provides cluster specific configuration options.
cluster:
  id: l2MhjkWZxpT2BFi2B0cAAnH0gnz8PtiHi58vEW05aaw= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  secret: I6sLNhbQHfVzS9gFiXzMoPQzi9VvqOneK/lckpfv5oA= # Shared secret of cluster (base64 encoded random 32 bytes).
  # Provides control plane specific configuration options.
  controlPlane:
    endpoint: https://192.168.5.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
  clusterName: talos-cluster # Configures the cluster's name.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12

    # # The CNI used.
    # cni:
    #     name: custom # Name of CNI to use.
    #     # URLs containing manifests to apply for the CNI.
    #     urls:
    #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
  token: 0ditqe.eukkhj5mz4dufuj2 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
  secretboxEncryptionSecret: ZkAVa57eUH/sO0Q/HzpqhE/z6GXfpJIr7fPIErVGSN8= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVRDZ0F3SUJBZ0lSQUtjejljcmVsNVRJUzVoeFpNeE9OZmt3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREF6TVRJeE1qVTRNalZhRncwek5EQXpNVEF4TWpVNApNalZhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVM1UUFCeHd5Q1l3SWU2eDY5bWlnV0NSdm5oY3VSeThQdTU2b0ErYnpRUmFXY3dGU1c4Q2MyQU1INlEKRFZIcDU1R0xFUHQ1cStYWmFVZmZ5Ykw0L1UwdW8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGTlkxVloxdWZNR3YraUZ4SXd3VkpRb2g3a09oTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUNEQ0ZnYkYKN2xxcStDWEpySW5WQVp6Q3lvWE9yM2Q3SkRHYXVlK3NJY1NXQWlBSU5RT2IyOUNEdEkveGpPMWhaMG5WWXdyVgoycjVBeTdTUGVUZVRjMC9qRGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFrR053MzJxY3RGUk9mOVVNRURpMERZZkZyTzZPbW9xd1E3aGtWNlkzRjlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdVVBQWNjTWdtTUNIdXNldlpvb0Zna2I1NFhMa2N2RDd1ZXFBUG04MEVXbG5NQlVsdkFuTgpnREIra0ExUjZlZVJpeEQ3ZWF2bDJXbEgzOG15K1AxTkxnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
  aggregatorCA:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRZmR2RVNrWENEZUU5RTNJL0cvRHpDVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1ETXhNakV5TlRneU5Wb1hEVE0wTURNeE1ERXlOVGd5TlZvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTnhQY0xhUFM3b0Fvc2s4REFscGxZejB0bnY0MDliK3FrbXNZaEhwbU8rWDNvS2dYeHUyCmRXNElMdlJyS2t3Z0U0Q2lSY1ErVDZuODFjaWZJcEZEYTlTallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVRc2pqVGNZMGh5Z3RUYkpEK1AxemhoQmVVZW93Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnClVQdWx5TG8rSlRjZU1IaGN2SlBlRklkTW9RZy9VR010L3FDOWpyUncrMk1DSVFEVHVWUnRyZzNoNTNBWVVXZXgKVnVIN24rUXpUNmdPekk3QmdDQ3ljMFY5Mnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUJSbngvQzZQSGF1YUNhTzZzUkgvU0lMbXd6S1dwemRERExsakJxNTU3aS9vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFM0U5d3RvOUx1Z0NpeVR3TUNXbVZqUFMyZS9qVDF2NnFTYXhpRWVtWTc1ZmVncUJmRzdaMQpiZ2d1OUdzcVRDQVRnS0pGeEQ1UHFmelZ5Sjhpa1VOcjFBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded private key for service account token generation.
  serviceAccount:
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUUvYVd5QUZzbnJEVEhWU3E2djhXRmtWVUNQOFlRUW9rY2x2RnNET3dtM3VvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZE93TGFQcVl3dzlZQzdoTUx0UzY0Undac0dLdTJzTlkrWlBxa3pFcEltUWJOYVNXNnZ3cQo2Nkd5dWkrRTB4Q25HbjRRUkJpRHFVc1RwMlFsbk8yN2ZnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # API server specific configuration options.
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.29.2 # The container image used in the API server manifest.
    # Extra certificate subject alternative names for the API server's certificate.
    certSANs:
      - 192.168.5.200
    disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
    # Configure the API server admission plugins.
    admissionControl:
      - name: PodSecurity # Name is the name of the admission controller.
        # Configuration is an embedded configuration object to be used as the plugin's
        configuration:
          apiVersion: pod-security.admission.config.k8s.io/v1alpha1
          defaults:
            audit: restricted
            audit-version: latest
            enforce: baseline
            enforce-version: latest
            warn: restricted
            warn-version: latest
          exemptions:
            namespaces:
              - kube-system
            runtimeClasses: []
            usernames: []
          kind: PodSecurityConfiguration
    # Configure the API server audit policy.
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  # Controller manager server specific configuration options.
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.29.2 # The container image used in the controller manager manifest.
  # Kube-proxy server-specific configuration options
  proxy:
    image: registry.k8s.io/kube-proxy:v1.29.2 # The container image used in the kube-proxy manifest.

    # # Disable kube-proxy deployment on cluster bootstrap.
    # disabled: false
  # Scheduler server specific configuration options.
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.29.2 # The container image used in the scheduler manifest.
  # Configures cluster member discovery.
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes:
        disabled: true # Disable Kubernetes discovery registry.
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/
  # Etcd specific configuration options.
  etcd:
    # The `ca` is the root certificate authority of the PKI.
    ca:
      crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNPZ0F3SUJBZ0lRZHZSd2QwUWNITGR4Sm5wSzJSWVVXekFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkwTURNeE1qRXlOVGd5TlZvWERUTTBNRE14TURFeU5UZ3lOVm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkZjRGttTUtuM0w3CnNwZjVQTG9xbXVvWVNyemZYeWdzdy9XT01mZGwwQUlZL2tzMzJYczhLdklER3NKcEw5ZUlkSzIzdHhsd3ZDeFoKVEd6ZTEwNlV5cVNqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVcytRMUVGODNFVG9tClJoK2JxdWIvUURHY083UXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTklQVTkxeVhPUllmREpUc2k5NTlJSWkKeGRsdVNhQmFVbTQzZEhxYzg5KzZBaUFKVG9RRERWTk1UZmdWY3RVTFBzbklzczZGUGwxbmZOS1RneUlLM0NrSwoyUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUV4Q1BmY1JzVk9hclVlM0JMRXhwMWlCUitQMkRHSkpwT0x6eUoweEk1Mm9vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVndPU1l3cWZjdnV5bC9rOHVpcWE2aGhLdk45ZktDekQ5WTR4OTJYUUFoaitTemZaZXp3cQo4Z01hd21rdjE0aDByYmUzR1hDOExGbE1iTjdYVHBUS3BBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=

  # A list of urls that point to additional manifests.
  extraManifests: []

  inlineManifests: []
