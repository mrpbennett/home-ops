version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
  type: controlplane # Defines the role of the machine within the cluster.
  token: ymwlld.clgiyjm3t0395gyp # The `token` is used by a machine to join the PKI of the cluster.
  # The root certificate authority of the PKI.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJFNzRDMTIwbU56NWN3b05ma0VvSmZNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5ERXdNVFV4TlRFM01EZGFGdzB6TkRFd01UTXhOVEUzTURkYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZUNlQWNOS1FZZmltR01oSmpPVFJyK0FQd1lDc2Y5U0FzNyttCkxLZWJhR2lqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVblIyUHFCZzdpUGl5djlqdwp5UzBLYWJCb1N3WXdCUVlESzJWd0EwRUFNYUVjak1vMFdSWHdpY2oxVVNiaGN1WUEvUEIzbUwyOGVCU29obFk2CjYvRytFYWM3RUgyMDhmd2YveFZET3dxVFdBRjJidGZ1allDWnZFNkhMZEVKRHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJRU5pT0NFUGhoUWpvSXhCMkdVb1A5azM4NkxzaFBXZXRXZWtaQ0tiT2xaSQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.29.2 # The `image` field is an optional reference to an alternative kubelet image.
    defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
    disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.

    extraMounts:
      - destination: /var/lib/longhorn
        type: bind
        source: /var/lib/longhorn
        options:
          - bind
          - rshared
          - rw

    extraArgs:
      rotate-server-certificates: true

  # Provides machine specific network configuration options.
  network:
    hostname: talos-cp-3
    nameservers:
      - 192.168.4.100
      - 1.1.1.1
    interfaces:
      - deviceSelector:
          busPath: "0*" # Single Network Interface
        addresses:
          - 192.168.5.3/22 # static IP
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.4.1
        vip:
          ip: 192.168.5.200 # Specifies the VIP address to be used.

  # Used to provide instructions for installations.
  install:
    disk: /dev/sda # The disk used for installations.
    image: factory.talos.dev/installer/88d1f7a5c4f1d3aba7df787c448c1d3d008ed29cfb34af53fa0df4336a56040b:v1.8.1 # Allows for supplying the image used to perform the installation.
    wipe: false # Indicates if the installation disk should be wiped at installation time.

  # Used to configure the machine's container image registry mirrors.
  registries:
    mirrors:
      personal_docker_registry:
        endpoints:
          - http://192.168.7.210:5000

    # Specifies TLS & auth configuration for HTTPS image registries.
    config:
      registry.insecure:
        tls:
          insecureSkipVerify: true

  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).
    stableHostname: true # Enable stable default hostname.
    apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
    diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
    # KubePrism - local proxy/load balancer on defined port that will distribute
    kubePrism:
      enabled: true # Enable KubePrism support - will start local load balacing proxy.
      port: 7445 # KubePrism port.

  # # Example configuration for cloudflare ntp server.
  time:
    disabled: false
    servers:
      - time.cloudflare.com

# Provides cluster specific configuration options.
cluster:
  id: DdDDx88dPjliRA5jJA1ouh3XPOTsL4-itw4BasZRQPE= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  secret: Ph4xog2XQ956ks8qaJtFbw/OY2dsZM8afZaDp9I0Ojs= # Shared secret of cluster (base64 encoded random 32 bytes).
  # Provides control plane specific configuration options.
  controlPlane:
    endpoint: https://192.168.5.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
  clusterName: talos # Configures the cluster's name.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12

  token: tferew.kjatutbcjbg3gb3k # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
  secretboxEncryptionSecret: hnfODXYc2e5v0VqnHCsQvpwcUBnmCZi/DfDZCdb0XYA= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRZjg3Z0dYZkZIb2Z4S3hlSE9jMUdyREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNVEF4TlRFMU1UY3dOMW9YRFRNME1UQXhNekUxTVRjdwpOMW93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCR3VBYTNHblh5VVpvMkUwQytuRVN6OG0xeHpucmh4aGhKdkZqWGhNSXpRa1R3RDFGVDZ5UmREeGVmR0oKNmlSdGw1dUxEREVNSGloZ0M0bkZZL2tLWHR5allUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVViV2xtUFNqSmYwWi93SkF4YlhicER4NTkvUDh3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQU12NjhyWW8KdEV6RmlPc2RUSkxrYXg0Qlo3a21Ta0x1aHNmbDlFYlNoOFNmQWlCMEQ0UW5RWnUwbTh0Tm8wK1ViS09ndFVuTwpxeFJHUGduR2ptZE1IUCtDK2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZvY285TkFPT3o2RDZFMXpBc2hvVUN4S2R6YktYbnZvUjdLTHVtTnFQTldvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFYTRCcmNhZGZKUm1qWVRRTDZjUkxQeWJYSE9ldUhHR0VtOFdOZUV3ak5DUlBBUFVWUHJKRgowUEY1OFlucUpHMlhtNHNNTVF3ZUtHQUxpY1ZqK1FwZTNBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
  aggregatorCA:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRYnF4MjNidDZ4SW95U3FMSFYwN2QrVEFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1UQXhOVEUxTVRjd04xb1hEVE0wTVRBeE16RTFNVGN3TjFvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTVJtUjVtNEpUU3dyWFFHWWlVMGFaU2J6dmRFV2dna29YSDNwdlI3ejZRTEtadTRjRm1ZCmFqNmx0M1R4aVUxZUV5NlhwK3cxOWRTU3RlOG1BRWpNR1cyallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVJWFkwQlUraExoWG5ORVN5UFArVHBiekdJSFF3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloCkFMQjZ3eXVXbXRyY2dRRmlzRTVJb1Fud3oxeWcrRGVoaFBHOVJnV3lRRU9HQWlBOHZ1VWtIMG5hUHVkNTJXMEEKNHRrSTlMdWhYWkNVUjQzOUFEWFRFa2tYSUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUp3ZGxPUzE0RjNRYm9iZ2NEMjZPOEh6cHk5dk5YVHdSQzFodTArMGpjOTBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFeEdaSG1iZ2xOTEN0ZEFaaUpUUnBsSnZPOTBSYUNDU2hjZmVtOUh2UHBBc3BtN2h3V1pocQpQcVczZFBHSlRWNFRMcGVuN0RYMTFKSzE3eVlBU013WmJRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded private key for service account token generation.
  serviceAccount:
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUoyY3YvTnUydElhTFV4RElod0NzaUZpZE9wb00zNC96eitCK0ozQ2VBNktvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFWFN5QkRiL0N2OU0xY1FoaUl4WDQvNUwxNFBOeVp3RDdQQnNqVGpaSFhlOWhCQStHMzBnLwphNmwvVEVQRUpKTHlvU2pHK2x2U0t4cjJzQ095aitZanlnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # API server specific configuration options.
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.29.2 # The container image used in the API server manifest.
    # Extra certificate subject alternative names for the API server's certificate.
    certSANs:
      - 192.168.5.200
    disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
    # Configure the API server admission plugins.
    admissionControl:
      - name: PodSecurity # Name is the name of the admission controller.
        # Configuration is an embedded configuration object to be used as the plugin's
        configuration:
          apiVersion: pod-security.admission.config.k8s.io/v1alpha1
          defaults:
            audit: restricted
            audit-version: latest
            enforce: baseline
            enforce-version: latest
            warn: restricted
            warn-version: latest
          exemptions:
            namespaces:
              - kube-system
              - longhorn-system
            runtimeClasses: []
            usernames: []
          kind: PodSecurityConfiguration
    # Configure the API server audit policy.
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  # Controller manager server specific configuration options.
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.29.2 # The container image used in the controller manager manifest.
  # Kube-proxy server-specific configuration options
  proxy:
    image: registry.k8s.io/kube-proxy:v1.29.2 # The container image used in the kube-proxy manifest.

    # # Disable kube-proxy deployment on cluster bootstrap.
    # disabled: false
  # Scheduler server specific configuration options.
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.29.2 # The container image used in the scheduler manifest.
  # Configures cluster member discovery.
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes:
        disabled: true # Disable Kubernetes discovery registry.
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/
  # Etcd specific configuration options.
  etcd:
    # The `ca` is the root certificate authority of the PKI.
    ca:
      crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUphN1Q3c2g5eWE3WWlraXo2RWRZakV3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRFd01UVXhOVEUzTURkYUZ3MHpOREV3TVRNeE5URTNNRGRhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTUHJBRmFsZmlMCms3ckk0aWcrWUZFb2MrMkJHckttSUtQREFXTGdHOFI5SG5zczgxK1NOQmYxUjEvS1ppYXQ5VGtOczJ5Q1JhR0cKZGFBTWJzVzdtRjY0bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkh3TmlUMDh0VUNaCitjUlBpUlJwaVZtM0F3bi9NQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJSDFLRVoyQklSdjBqcXA0TXkzMjA2R0EKMmpSc2k1QkovaFJJR0M1M1BkbVdBaUVBbG54SlFtcXMraFIwZmpxSHorcDhseUg4ZGJIcnVHVGplZzl3aStmTwpNMnc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5Ya0k5OE9jVkZCWU1KRVE1a0o3cHdnVCtRTXY4Qit2M1F6ekxVQXpaYXRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFajZ3QldwWDRpNU82eU9Jb1BtQlJLSFB0Z1JxeXBpQ2p3d0ZpNEJ2RWZSNTdMUE5ma2pRWAo5VWRmeW1ZbXJmVTVEYk5zZ2tXaGhuV2dERzdGdTVoZXVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=

  # A list of urls that point to additional manifests.
  extraManifests: []

  # A list of inline Kubernetes manifests.
  inlineManifests:
    - name: namespace-longhorn-system
      contents: |
        apiVersion: v1
          kind: Namespace
          metadata:
            name: longhorn-system
            labels:
              pod-security.kubernetes.io/enforce: privileged
              pod-security.kubernetes.io/enforce-version: latest
              pod-security.kubernetes.io/audit: privileged
              pod-security.kubernetes.io/audit-version: latest
              pod-security.kubernetes.io/warn: privileged
              pod-security.kubernetes.io/warn-version: latest

  # # External cloud provider configuration.
  externalCloudProvider:
    enabled: true
    manifests:
      - https://raw.githubusercontent.com/mrpbennett/home-ops/main/kubernetes/cluster/cluster-role-binding.yaml

  # Allows running workload on control-plane nodes.
  allowSchedulingOnControlPlanes: true
