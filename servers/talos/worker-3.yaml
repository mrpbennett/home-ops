version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
  type: worker # Defines the role of the machine within the cluster.
  token: ymwlld.clgiyjm3t0395gyp # The `token` is used by a machine to join the PKI of the cluster.
  # The root certificate authority of the PKI.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJFNzRDMTIwbU56NWN3b05ma0VvSmZNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5ERXdNVFV4TlRFM01EZGFGdzB6TkRFd01UTXhOVEUzTURkYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZUNlQWNOS1FZZmltR01oSmpPVFJyK0FQd1lDc2Y5U0FzNyttCkxLZWJhR2lqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVblIyUHFCZzdpUGl5djlqdwp5UzBLYWJCb1N3WXdCUVlESzJWd0EwRUFNYUVjak1vMFdSWHdpY2oxVVNiaGN1WUEvUEIzbUwyOGVCU29obFk2CjYvRytFYWM3RUgyMDhmd2YveFZET3dxVFdBRjJidGZ1allDWnZFNkhMZEVKRHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: ""
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.29.2 # The `image` field is an optional reference to an alternative kubelet image.
    defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
    disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.

    extraMounts:
      - destination: /var/lib/longhorn
        type: bind
        source: /var/lib/longhorn
        options:
          - bind
          - rshared
          - rw

  # Provides machine specific network configuration options.
  network:
    hostname: talos-wk-3
    nameservers:
      - 192.168.4.100
      - 1.1.1.1
    interfaces:
      - deviceSelector:
          busPath: "0*" # Single Network Interface
        addresses:
          - 192.168.5.6/22 # static IP
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.4.1

  # Used to provide instructions for installations.
  install:
    disk: /dev/sda # The disk used for installations.
    image: factory.talos.dev/installer/88d1f7a5c4f1d3aba7df787c448c1d3d008ed29cfb34af53fa0df4336a56040b:v1.8.1 # Allows for supplying the image used to perform the installation.
    wipe: false # Indicates if the installation disk should be wiped at installation time.

  # Used to configure the machine's container image registry mirrors.
  registries:
    mirrors:
      personal_docker_registry:
        endpoints:
          - http://192.168.7.210:5000

    # Specifies TLS & auth configuration for HTTPS image registries.
    config:
      registry.insecure:
        tls:
          insecureSkipVerify: true

  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).
    stableHostname: true # Enable stable default hostname.
    apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
    diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
    # KubePrism - local proxy/load balancer on defined port that will distribute
    kubePrism:
      enabled: true # Enable KubePrism support - will start local load balacing proxy.
      port: 7445 # KubePrism port.

  # Example configuration for cloudflare ntp server.
  time:
    disabled: false # Indicates if the time service is disabled for the machine.
    servers:
      - time.cloudflare.com

  # # Used to configure the machine's sysctls.

# Provides cluster specific configuration options.
cluster:
  id: DdDDx88dPjliRA5jJA1ouh3XPOTsL4-itw4BasZRQPE= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  secret: Ph4xog2XQ956ks8qaJtFbw/OY2dsZM8afZaDp9I0Ojs= # Shared secret of cluster (base64 encoded random 32 bytes).
  # Provides control plane specific configuration options.
  controlPlane:
    endpoint: https://192.168.5.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12

    # # The CNI used.
    # cni:
    #     name: custom # Name of CNI to use.
    #     # URLs containing manifests to apply for the CNI.
    #     urls:
    #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
  token: tferew.kjatutbcjbg3gb3k # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRZjg3Z0dYZkZIb2Z4S3hlSE9jMUdyREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNVEF4TlRFMU1UY3dOMW9YRFRNME1UQXhNekUxTVRjdwpOMW93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCR3VBYTNHblh5VVpvMkUwQytuRVN6OG0xeHpucmh4aGhKdkZqWGhNSXpRa1R3RDFGVDZ5UmREeGVmR0oKNmlSdGw1dUxEREVNSGloZ0M0bkZZL2tLWHR5allUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVViV2xtUFNqSmYwWi93SkF4YlhicER4NTkvUDh3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQU12NjhyWW8KdEV6RmlPc2RUSkxrYXg0Qlo3a21Ta0x1aHNmbDlFYlNoOFNmQWlCMEQ0UW5RWnUwbTh0Tm8wK1ViS09ndFVuTwpxeFJHUGduR2ptZE1IUCtDK2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: ""
  # Configures cluster member discovery.
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes:
        disabled: true # Disable Kubernetes discovery registry.
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/

  # # External cloud provider configuration.
  externalCloudProvider:
    enabled: true
    manifests:
      - https://raw.githubusercontent.com/mrpbennett/home-ops/main/kubernetes/cluster/cluster-role-binding.yaml
