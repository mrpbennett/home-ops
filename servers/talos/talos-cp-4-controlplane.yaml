version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
  type: controlplane # Defines the role of the machine within the cluster.
  token: yrejc6.17g1v8q5j0ksmpuy # The `token` is used by a machine to join the PKI of the cluster.
  # The root certificate authority of the PKI.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBNVhNMXc1UlBIZW1uWlFnK1FPVHBYakFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qUXdNekV5TVRRd01qVTRXaGNOTXpRd016RXdNVFF3TWpVNFdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUplNVEwQ1IxUmFHQ2haeXlSS0F1Q0JOZE9xNDcyUzhtclVECkFBWHpvTmorbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5hOUpLeXFOWHZERlNTeAp3MHA5NFhDc1VTUHNNQVVHQXl0bGNBTkJBSktJZXRJM3F6Y0QxQlJ4SWhkWmdSS0d5YjIyYmpRVmh6K29yKzc1CkJsVjRYSW4ySlJrcWdjV01CQVBlL285N09PdGxpSUxobCtZS2RXcXYxcE5YdEE0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTEd1YUVnV1JwS2E2a2w2ZTNpVVJIbG9CTzQyNXZOenBBOE53dlZEQzJuegotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.29.2 # The `image` field is an optional reference to an alternative kubelet image.
    defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
    disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.

  network:
    hostname: talos-cp-4
    nameservers:
      - 192.168.4.2
      - 1.1.1.1
    interfaces:
      - deviceSelector:
          busPath: "0*"
        addresses:
          - 192.168.5.4/22
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.4.1
        vip:
          ip: 192.168.5.200 # Specifies the IP address to be used.

  time:
    servers:
      - time.cloudflare.com

  # Used to provide instructions for installations.
  install:
    disk: /dev/sda # The disk used for installations.
    image: ghcr.io/siderolabs/installer:v1.6.5 # Allows for supplying the image used to perform the installation.
    wipe: false # Indicates if the installation disk should be wiped at installation time.

  # Used to configure the machine's container image registry mirrors.
  registries: {}

  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).
    stableHostname: true # Enable stable default hostname.
    apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
    diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
    # KubePrism - local proxy/load balancer on defined port that will distribute
    kubePrism:
      enabled: true # Enable KubePrism support - will start local load balacing proxy.
      port: 7445 # KubePrism port.

# Provides cluster specific configuration options.
cluster:
  id: GfSmED1Oo85uOYWo4DBmcsG82Mc4jUZTxqGGbXMvmlM= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  secret: n6FnzVPmjxkmQr879q4VRc3vcGFzV+VuYIMq6xOHOs4= # Shared secret of cluster (base64 encoded random 32 bytes).
  # Provides control plane specific configuration options.
  controlPlane:
    endpoint: https://192.168.5.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
  clusterName: talos-cluster # Configures the cluster's name.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12

  token: yr8h0l.c12vnskj61yhxeya # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
  secretboxEncryptionSecret: UgVOi4pFktYIXuHI7g1Z2xyqRC3ow1NM4HL3Nk8ypGY= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVRDZ0F3SUJBZ0lSQVAvKzE2S01pSWFrS3hNQXJjVm8rMzR3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREF6TVRJeE5EQXlOVGhhRncwek5EQXpNVEF4TkRBeQpOVGhhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVJvSFZwYjgyRWtZTUl6eVpCYVR4SUxndFZSekZrTk9mR0I4bDJmVExHRFZWUzF5cHoxdTN3ZUJ2WWMKVU1ENnFuZjlPRkJkdWRMamF1MnJuaXFBcWpiMW8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGSHFCWlJjZFUvTkk1d3c1N2JHSzEvU0pCdzVHTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUZ4MnpGRkQKeUJkYWJHQnJ4cHNXVTArenZZRmNSak5NYnpTRGI0UVJXdmc5QWlBL0RIWUtDcTl3OUhLenpjd0NrcEtXL0hiQQpjbXFqTnVjK1crRDREanN0eHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFudHNQRTUvSHpUZWJ6UXBxUWNzUERoNEpmOEhHTGpIcVZwdXA0K2UxbnJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFYUIxYVcvTmhKR0RDTThtUVdrOFNDNExWVWN4WkRUbnhnZkpkbjB5eGcxVlV0Y3FjOWJ0OApIZ2IySEZEQStxcDMvVGhRWGJuUzQycnRxNTRxZ0tvMjlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
  aggregatorCA:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRYWFCaTU1U2dDRG9oU21adXpNeThxakFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1ETXhNakUwTURJMU9Gb1hEVE0wTURNeE1ERTBNREkxT0Zvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCRlN6ak9pSmc3QWU0OU1ydTV5bURxRFRVZHphQkoxaXRqNVVzV0dHSmFvNUpIY2YxbTY5ClU0SE1hQzJVNDkrKzFhZ0hNTVR0N3QydkNrUWphUGJEbE51allUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVGenNRUVBUczhJdkVyVXVsZFl3UTJXQzF0emd3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnClpwR0hjQkYwWXdvZ045Nk1QdFhITU5JK0ViV095Z2JZV1NteDEvd0JVTVlDSVFELzZhdVFJYmxidzJjVE8wTXcKQVVvcDVXME13TzJ1dDhrVmI3N2lYS1RkZWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU9iZjJqaDNIRWtaWDNCek9zd3VhbGZ5azVPYUN4cXBBYit0VVMxWFhNY1pvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVkxPTTZJbURzQjdqMHl1N25LWU9vTk5SM05vRW5XSzJQbFN4WVlZbHFqa2tkeC9XYnIxVApnY3hvTFpUajM3N1ZxQWN3eE8zdTNhOEtSQ05vOXNPVTJ3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded private key for service account token generation.
  serviceAccount:
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUIzZHk3My91SXFkMlZlWUs4ZTJwRHV2UndyM0pVcXgrRlB4VXAvSjV2NmhvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQkN3SmpZN3h1Y1FrQS82Qlg3Q3dPTzdFNFRtWjJ0eHRKVmdLbm4wM1R4VzRwd0tnZXZLbgpDUGdqS3QyQTVmUTRqYjNFTldRakU4WXg5WTgyODI2TXNnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # API server specific configuration options.
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.29.2 # The container image used in the API server manifest.
    # Extra certificate subject alternative names for the API server's certificate.
    certSANs:
      - 192.168.5.200
    disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
    # Configure the API server admission plugins.
    admissionControl:
      - name: PodSecurity # Name is the name of the admission controller.
        # Configuration is an embedded configuration object to be used as the plugin's
        configuration:
          apiVersion: pod-security.admission.config.k8s.io/v1alpha1
          defaults:
            audit: restricted
            audit-version: latest
            enforce: baseline
            enforce-version: latest
            warn: restricted
            warn-version: latest
          exemptions:
            namespaces:
              - kube-system
            runtimeClasses: []
            usernames: []
          kind: PodSecurityConfiguration
    # Configure the API server audit policy.
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  # Controller manager server specific configuration options.
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.29.2 # The container image used in the controller manager manifest.
  # Kube-proxy server-specific configuration options
  proxy:
    image: registry.k8s.io/kube-proxy:v1.29.2 # The container image used in the kube-proxy manifest.

    # # Disable kube-proxy deployment on cluster bootstrap.
    # disabled: false
  # Scheduler server specific configuration options.
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.29.2 # The container image used in the scheduler manifest.
  # Configures cluster member discovery.
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes:
        disabled: true # Disable Kubernetes discovery registry.
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/
  # Etcd specific configuration options.
  etcd:
    # The `ca` is the root certificate authority of the PKI.
    ca:
      crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNTZ0F3SUJBZ0lSQUlvdStMYWJ2Nk8yeTNvVWl5ZktYa2t3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRBek1USXhOREF5TlRoYUZ3MHpOREF6TVRBeE5EQXlOVGhhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFUQ0FyUDczSmlkCnhta3p5a0YzZGtacGZBMk1yMUxTcURMc0d3WTQzSXU2Y0tSNFE2QWNyK1JPWi9BS016WmFmbi9oZTNnTGRsd1QKeFRFd1NlQWFGdE9zbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkkySXpSN2xSeXhDCll4cE9Td2tSKzBOclczS1VNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJR1dRZXVvSzdnODNsRFNmVWNEeERLMjcKWk94dXMxeTdwb2dTc01CaWgzVUtBaUFxREVHUkVSeGdZVlBCYUxNMjZmU2FhdnI2QVd3UnozaG02aFB5dDBodwpoUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU1hUzVSRlhEYTcxckdxZis1WWhaSi85TnFWYlhGcmgzbFJMUU9BZDI3VUxvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFd2dLeis5eVluY1pwTThwQmQzWkdhWHdOaks5UzBxZ3k3QnNHT055THVuQ2tlRU9nSEsvawpUbWZ3Q2pNMlduNS80WHQ0QzNaY0U4VXhNRW5nR2hiVHJBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=

  # A list of urls that point to additional manifests.
  extraManifests: []
  inlineManifests: []
