version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
  type: worker # Defines the role of the machine within the cluster.
  token: b9qk5s.iuf74bcfb0rehree # The `token` is used by a machine to join the PKI of the cluster.
  # The root certificate authority of the PKI.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEI4cEp1R1pVT2swN3JkWmJkYjlTYi9NQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5ERXdNVFV4TVRJek16QmFGdzB6TkRFd01UTXhNVEl6TXpCYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBY0QwK2Z6bThyYXhaa3hSd3lEc0RDSXhxNFpSQVpab0w0d0dJCmNYQWEvcm1qWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVTUhHdkVjdUFMV2JWMjNHdQpIN3kwYnpJaFN1QXdCUVlESzJWd0EwRUE0N0pOM1VFM0o0Y0NMcmZSbXN2bVZaN0l1bFB6VEN1WlVMOHpucGloClVtem9Tc2cvLzdQRGh1UUFvUTQxTVlJM2ZBODJuWmc2ZXVFTFZmMCtTOEFoREE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: ""
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.29.2 # The `image` field is an optional reference to an alternative kubelet image.
    defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
    disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static

    extraMounts:
      - destination: /var/lib/longhorn
        type: bind
        source: /var/lib/longhorn
        options:
          - bind
          - rshared
          - rw

  network:
    hostname: talos-wk-1
    nameservers:
      - 192.168.4.100
      - 1.1.1.1
    interfaces:
      - deviceSelector:
          busPath: "0*" # Single Network Interface
        addresses:
          - 192.168.5.4/22 # static IP
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.4.1

        # # Picks a network device using the selector.

        # # select a device with bus prefix 00:*.
        # deviceSelector:
        #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
        # deviceSelector:
        #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
        #     driver: virtio # Kernel driver, supports matching by wildcard.
        # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
        # deviceSelector:
        #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
        #       driver: virtio # Kernel driver, supports matching by wildcard.

        # # Bond specific options.
        # bond:
        #     # The interfaces that make up the bond.
        #     interfaces:
        #         - enp2s0
        #         - enp2s1
        #     # Picks a network device using the selector.
        #     deviceSelectors:
        #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
        #           driver: virtio # Kernel driver, supports matching by wildcard.
        #     mode: 802.3ad # A bond option.
        #     lacpRate: fast # A bond option.

        # # Bridge specific options.
        # bridge:
        #     # The interfaces that make up the bridge.
        #     interfaces:
        #         - enxda4042ca9a51
        #         - enxae2a6774c259
        #     # A bridge option.
        #     stp:
        #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

        # # Indicates if DHCP should be used to configure the interface.
        # dhcp: true

        # # DHCP specific options.
        # dhcpOptions:
        #     routeMetric: 1024 # The priority of all routes received via DHCP.

        # # Wireguard specific configuration.

        # # wireguard server example
        # wireguard:
        #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
        #     listenPort: 51111 # Specifies a device's listening port.
        #     # Specifies a list of peer configurations to apply to a device.
        #     peers:
        #         - publicKey: ABCDEF... # Specifies the public key of this peer.
        #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
        #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
        #           allowedIPs:
        #             - 192.168.1.0/24
        # # wireguard peer example
        # wireguard:
        #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
        #     # Specifies a list of peer configurations to apply to a device.
        #     peers:
        #         - publicKey: ABCDEF... # Specifies the public key of this peer.
        #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
        #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
        #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
        #           allowedIPs:
        #             - 192.168.1.0/24

        # # Virtual (shared) IP address configuration.

        # # layer2 vip example
        # vip:
        #     ip: 172.16.199.55 # Specifies the IP address to be used.

  # Used to statically set the nameservers for the machine.
  nameservers:
    - 8.8.8.8
    - 1.1.1.1

  # # Allows for extra entries to be added to the `/etc/hosts` file
  # extraHostEntries:
  #     - ip: 192.168.1.100 # The IP of the host.
  #       # The host alias.
  #       aliases:
  #         - example
  #         - example.domain.tld

  # # Configures KubeSpan feature.
  # kubespan:
  #     enabled: true # Enable the KubeSpan feature.

  # Used to provide instructions for installations.
  install:
    disk: /dev/sda # The disk used for installations.
    image: factory.talos.dev/installer/88d1f7a5c4f1d3aba7df787c448c1d3d008ed29cfb34af53fa0df4336a56040b:v1.8.1 # Allows for supplying the image used to perform the installation.
    wipe: false # Indicates if the installation disk should be wiped at installation time.

    # # Look up disk using disk attributes like model, size, serial and others.
    # diskSelector:
    #     size: 4GB # Disk size.
    #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
    #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

    # # Allows for supplying extra kernel args via the bootloader.
    # extraKernelArgs:
    #     - talos.platform=metal
    #     - reboot=k

    # # Allows for supplying additional system extension images to install on top of base Talos image.
    # extensions:
    #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
  # Used to configure the machine's container image registry mirrors.
  # Used to configure the machine's container image registry mirrors.
  registries:
    mirrors:
      personal_docker_registry:
        endpoints:
          - http://192.168.7.210:5000

    # Specifies TLS & auth configuration for HTTPS image registries.
    config:
      registry.insecure:
        tls:
          insecureSkipVerify: true

  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).
    stableHostname: true # Enable stable default hostname.
    apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
    diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
    # KubePrism - local proxy/load balancer on defined port that will distribute
    kubePrism:
      enabled: true # Enable KubePrism support - will start local load balacing proxy.
      port: 7445 # KubePrism port.

    # # Configure Talos API access from Kubernetes pods.
    # kubernetesTalosAPIAccess:
    #     enabled: true # Enable Talos API access from Kubernetes pods.
    #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
    #     allowedRoles:
    #         - os:reader
    #     # The list of Kubernetes namespaces Talos API access is available from.
    #     allowedKubernetesNamespaces:
    #         - kube-system

  # # Provides machine specific control plane configuration options.

  # # ControlPlane definition example.
  # controlPlane:
  #     # Controller manager machine specific configuration options.
  #     controllerManager:
  #         disabled: false # Disable kube-controller-manager on the node.
  #     # Scheduler machine specific configuration options.
  #     scheduler:
  #         disabled: true # Disable kube-scheduler on the node.

  # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

  # # nginx static pod.
  # pods:
  #     - apiVersion: v1
  #       kind: pod
  #       metadata:
  #         name: nginx
  #       spec:
  #         containers:
  #             - image: nginx
  #               name: nginx

  # # Used to partition, format and mount additional disks.

  # # MachineDisks list example.
  disks:
    - device: /dev/sdb
      partitions:
        - mountpoint: /var/lib/longhorn
          size: 100Gi

  # # Allows the addition of user specified files.

  # # MachineFiles usage example.
  # files:
  #     - content: '...' # The contents of the file.
  #       permissions: 0o666 # The file's permissions in octal.
  #       path: /tmp/file.txt # The path of the file.
  #       op: append # The operation to use

  # # The `env` field allows for the addition of environment variables.

  # # Environment variables definition examples.
  # env:
  #     GRPC_GO_LOG_SEVERITY_LEVEL: info
  #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
  #     https_proxy: http://SERVER:PORT/
  # env:
  #     GRPC_GO_LOG_SEVERITY_LEVEL: error
  #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
  # env:
  #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

  # # Used to configure the machine's time settings.

  # # Example configuration for cloudflare ntp server.
  # time:
  #     disabled: false # Indicates if the time service is disabled for the machine.
  #     # Specifies time (NTP) servers to use for setting the system time.
  #     servers:
  #         - time.cloudflare.com
  #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

  # # Used to configure the machine's sysctls.

  # # MachineSysctls usage example.
  # sysctls:
  #     kernel.domainname: talos.dev
  #     net.ipv4.ip_forward: "0"
  #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

  # # Used to configure the machine's sysfs.

  # # MachineSysfs usage example.
  # sysfs:
  #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

  # # Machine system disk encryption configuration.
  # systemDiskEncryption:
  #     # Ephemeral partition encryption.
  #     ephemeral:
  #         provider: luks2 # Encryption provider to use for the encryption.
  #         # Defines the encryption keys generation and storage method.
  #         keys:
  #             - # Deterministically generated key from the node UUID and PartitionLabel.
  #               nodeID: {}
  #               slot: 0 # Key slot number for LUKS2 encryption.
  #
  #               # # KMS managed encryption key.
  #               # kms:
  #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
  #
  #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
  #         # cipher: aes-xts-plain64

  #         # # Defines the encryption sector size.
  #         # blockSize: 4096

  #         # # Additional --perf parameters for the LUKS2 encryption.
  #         # options:
  #         #     - no_read_workqueue
  #         #     - no_write_workqueue

  # # Configures the udev system.
  # udev:
  #     # List of udev rules to apply to the udev system
  #     rules:
  #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

  # # Configures the logging system.
  # logging:
  #     # Logging destination.
  #     destinations:
  #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
  #           format: json_lines # Logs format.

  # # Configures the kernel.
  # kernel:
  #     # Kernel modules to load.
  #     modules:
  #         - name: brtfs # Module name.

  # # Configures the seccomp profiles for the machine.
  # seccompProfiles:
  #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
  #       # The `value` field is used to provide the seccomp profile.
  #       value:
  #         defaultAction: SCMP_ACT_LOG

  # # Configures the node labels for the machine.

  # # node labels example.
  # nodeLabels:
  #     exampleLabel: exampleLabelValue

  # # Configures the node taints for the machine. Effect is optional.

  # # node taints example.
  # nodeTaints:
  #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
  id: 0Ntr8xyZrsBvXH-UPW2fLTBcxhjX1ATQmsdorEf2g4I= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  secret: oa0TK2D/1mGMOnT8zjirv/LkvJqDd88cn7ob2Z1UECQ= # Shared secret of cluster (base64 encoded random 32 bytes).
  # Provides control plane specific configuration options.
  controlPlane:
    endpoint: https://192.168.5.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12

    # # The CNI used.
    # cni:
    #     name: custom # Name of CNI to use.
    #     # URLs containing manifests to apply for the CNI.
    #     urls:
    #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
  token: cvv759.tnzjhss84xljmpfq # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQU9IVWVIbDZHKzd3WXVvWmxSS3JOLzh3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREV3TVRVeE1USXpNekJhRncwek5ERXdNVE14TVRJegpNekJhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVJ3dmpWblBQZ2xNMG40QzRVTXQ4cEFlVnQxQUhaVkQ2MzNTUjF0dUkwMlp5WEw5THVEV3VldXVRZUcKYVN4Z3E4WURxRkt3K09WTEpyM2xOOEROT25Hdm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRTBvNXQ4bmovK0p1TCt0OVN6MWk1bkttNEdsTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDUUlJVzEKR21ITzllcU1wcUR5UmVwL0h6OU5icjBnVDZTYW5NaWZ2dlVmRVFJZ05OdWJrS3paQXRmcSswRXVjLzE2eHIzMQpOb0JQS3ZqemMxOUFQc2RYZCs0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: ""
  # Configures cluster member discovery.
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes:
        disabled: true # Disable Kubernetes discovery registry.
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/

  # API server specific configuration options.
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.29.2 # The container
    admissionControl:
      - name: PodSecurity # Name is the name of the admission
        configuration:
          apiVersion: pod-security.admission.config.k8s.io/v1alpha1
          defaults:
            audit: restricted
            audit-version: latest
            enforce: baseline
            enforce-version: latest
            warn: restricted
            warn-version: latest
          exemptions:
            namespaces:
              - kube-system
              - longhorn-system
            runtimeClasses: []
            usernames: []
          kind: PodSecurityConfiguration
