apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: custom-cnpg-cluster
  namespace: custon-cnpg
spec:
  description: "Custom CNPG Postgres Cluster"
  instances: 3
  imageName: "192.168.5.100:5000/custom-cnpg:0.0.1"
  startDelay: 300
  stopDelay: 300
  primaryUpdateStrategy: unsupervised

  postgresql:
    parameters:
      shared_buffers: 256MB

      # pg_cron
      shared_preload_libraries: "pg_cron"
      cron.timezone: GMT

  bootstrap:
    initdb:
      database: db
      owner: paul
      secret:
        name: custom-cnpg-user
      postInitTemplateSQL:
        - "CREATE EXTENSION IF NOT EXISTS pg_cron;"
        - "GRANT USAGE ON SCHEMA cron TO marco;"

        - "CREATE EXTENSION IF NOT EXISTS timescaledb;"

  enableSuperuserAccess: true
  superuserSecret:
    name: custom-cnpg-superuser

  managed:
    services:
      additional:
        - selectorType: rw
          serviceTemplate:
            metadata:
              name: custom-cnpg-rw-svc
              annotations:
                metallb.universe.tf/loadBalancerIPs: 192.168.5.99
            spec:
              type: LoadBalancer

  storage:
    storageClass: longhorn-static
    size: 8Gi

  backup:
    retentionPolicy: "30d"

  resources:
    requests:
      memory: "512Mi"
      cpu: "1"
    limits:
      memory: "1Gi"
      cpu: "2"

  affinity:
    enablePodAntiAffinity: true
    topologyKey: failure-domain.beta.kubernetes.io/zone

  monitoring:
    enablePodMonitor: true
