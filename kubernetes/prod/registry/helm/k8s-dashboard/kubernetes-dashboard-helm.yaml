apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kubernetes-dashboard
  namespace: argocd
  # annotations:
  #   argocd.argoproj.io/sync-wave: "3"
spec:
  destination:
    server: "https://kubernetes.default.svc"
    namespace: kubernetes-dashboard
  project: default
  source:
    chart: kubernetes-dashboard
    repoURL: https://kubernetes.github.io/dashboard/
    targetRevision: 7.12.0
    helm:
      valuesObject:
        app:
          mode: "dashboard"

          settings:
            global:
              clusterName: kube-k3s
              itemsPerPage: 20
              logsAutoRefreshTimeInterval: 5
              resourceAutoRefreshTimeInterval: 10
              defaultNamespace: kubernetes-dashboard

          ingress:
            enabled: true
            hosts:
              - k8s-dash.home.local
            ingressClassName: nginx
            pathType: ImplementationSpecific
            path: /
            tls:
              enabled: false

        auth:
          role: auth
          image:
            repository: docker.io/kubernetesui/dashboard-auth
            tag: 1.2.0
          scaling:
            replicas: 1
            revisionHistoryLimit: 10
          containers:
            ports:
              - name: auth
                containerPort: 8000
                protocol: TCP
            args: []
            env: []
            volumeMounts:
              - mountPath: /tmp
                name: tmp-volume

        # API deployment configuration
        api:
          role: api
          image:
            repository: docker.io/kubernetesui/dashboard-api
            tag: 1.9.0
          scaling:
            replicas: 1
            revisionHistoryLimit: 10
          containers:
            ports:
              - name: api
                containerPort: 8000
                protocol: TCP

        # WEB UI deployment configuration
        web:
          role: web
          image:
            repository: docker.io/kubernetesui/dashboard-web
            tag: 1.5.0
          scaling:
            replicas: 1
            revisionHistoryLimit: 10
          containers:
            ports:
              - name: web
                containerPort: 8000
                protocol: TCP

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
