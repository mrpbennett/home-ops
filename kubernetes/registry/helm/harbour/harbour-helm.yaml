apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: &app harbor
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "99"
spec:
  destination:
    server: "https://kubernetes.default.svc"
    namespace: *app
  project: default
  source:
    chart: *app
    repoURL: https://helm.goharbor.io
    targetRevision: 1.17.1
    helm:
      valuesObject:
        existingSecretAdminPasswordKey: HARBOR_ADMIN_PASSWORD
        harborAdminPassword: "123qwe!!"

        expose:
          type: ingress
          tls:
            enabled: true
            certSource: auto
          ingress:
            hosts:
              core: harbor-prod.70ld.dev
            controller: default
            className: nginx
            annotations:
              ingress.kubernetes.io/ssl-redirect: "true"
              cert-manager.io/cluster-issuer: letsencrypt-cloudflare-dns-issuer

              nginx.ingress.kubernetes.io/proxy-body-size: "0"
              nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
              nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
              nginx.ingress.kubernetes.io/proxy-buffering: "off"
              nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
              nginx.ingress.kubernetes.io/ssl-redirect: "true"

        externalURL: https://harbor-prod.70ld.dev

        persistence:
          enabled: true
          resourcePolicy: ""
          persistentVolumeClaim:
            registry:
              storageClassName: "longhorn"
              subPath: ""
              accessMode: ReadWriteOnce
              size: 50Gi
              annotations: {}

            database:
              existingClaim: ""
              storageClass: "longhorn"
              subPath: ""
              accessMode: ReadWriteOnce
              size: 1Gi
              annotations: {}

            redis:
              existingClaim: ""
              storageClass: "longhorn"
              subPath: ""
              accessMode: ReadWriteOnce
              size: 1Gi
              annotations: {}

            trivy:
              existingClaim: ""
              storageClass: "longhorn"
              subPath: ""
              accessMode: ReadWriteOnce
              size: 5Gi
              annotations: {}

          imageChartStorage:
            disableredirect: false
            type: s3
            s3:
              # Set an existing secret for S3 accesskey and secretkey
              # keys in the secret should be REGISTRY_STORAGE_S3_ACCESSKEY and REGISTRY_STORAGE_S3_SECRETKEY for registry
              #existingSecret: ""
              region: uk-south
              bucket: harbor-registry
              accesskey: RafjmLf7yn5WN7BAEmWi
              secretkey: 1F41WZnzzTZLj2UQlOxS6ARAzvvoRs5MMf0S1GIe
              regionendpoint: https://minio-prod.70ld.dev
              # encrypt: false
              # keyid: mykeyid
              # secure: true
              # skipverify: false
              # v4auth: true
              # chunksize: "5242880"
              rootdirectory: /
              storageclass: STANDARD
              multipartcopychunksize: "33554432"
              multipartcopymaxconcurrency: 100
              multipartcopythresholdsize: "33554432"

        database:
          type: external
          external:
            host: "cnpg-cluster-rw.cnpg-cluster.svc.cluster.local"
            port: "5432"
            username: harbor
            password: password
            coreDatabase: harbor-registry

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
