apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
spec:
  destination:
    server: "https://kubernetes.default.svc"
    namespace: logging
  project: default
  source:
    chart: loki
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.30.1
    helm:
      valuesObject:
        loki:
          image:
            registry: docker.io
            repository: grafana/loki
            tag: 3.5.0

          config: |
            {{- if .Values.enterprise.enabled}}
            {{- tpl .Values.enterprise.config . }}
            {{- else }}
            auth_enabled: {{ .Values.loki.auth_enabled }}
            {{- end }}

            {{- with .Values.loki.server }}
            server:
              {{- toYaml . | nindent 2}}
            {{- end}}

            pattern_ingester:
              enabled: {{ .Values.loki.pattern_ingester.enabled }}

            memberlist:
            {{- if .Values.loki.memberlistConfig }}
              {{- toYaml .Values.loki.memberlistConfig | nindent 2 }}
            {{- else }}
            {{- if .Values.loki.extraMemberlistConfig}}
            {{- toYaml .Values.loki.extraMemberlistConfig | nindent 2}}
            {{- end }}
              join_members:
                - {{ include "loki.memberlist" . }}
                {{- with .Values.migrate.fromDistributed }}
                {{- if .enabled }}
                - {{ .memberlistService }}
                {{- end }}
                {{- end }}
            {{- end }}

            {{- with .Values.loki.ingester }}
            ingester:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            {{- if .Values.loki.commonConfig}}
            common:
            {{- toYaml .Values.loki.commonConfig | nindent 2}}
              storage:
              {{- include "loki.commonStorageConfig" . | nindent 4}}
            {{- end}}

            {{- with .Values.loki.limits_config }}
            limits_config:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            runtime_config:
              file: /etc/loki/runtime-config/runtime-config.yaml

            {{- with .Values.chunksCache }}
            {{- if .enabled }}
            chunk_store_config:
              chunk_cache_config:
                default_validity: {{ .defaultValidity }}
                background:
                  writeback_goroutines: {{ .writebackParallelism }}
                  writeback_buffer: {{ .writebackBuffer }}
                  writeback_size_limit: {{ .writebackSizeLimit }}
                memcached:
                  batch_size: {{ .batchSize }}
                  parallelism: {{ .parallelism }}
                memcached_client:
                  addresses: dnssrvnoa+_memcached-client._tcp.{{ template "loki.fullname" $ }}-chunks-cache.{{ $.Release.Namespace }}.svc
                  consistent_hash: true
                  timeout: {{ .timeout }}
                  max_idle_conns: 72
            {{- end }}
            {{- end }}

            {{- if .Values.loki.schemaConfig }}
            schema_config:
            {{- toYaml .Values.loki.schemaConfig | nindent 2}}
            {{- end }}

            {{- if .Values.loki.useTestSchema }}
            schema_config:
            {{- toYaml .Values.loki.testSchemaConfig | nindent 2}}
            {{- end }}

            {{- if .Values.ruler.enabled }}
            {{ include "loki.rulerConfig" . }}
            {{- end }}

            {{- if and .Values.loki.storage.use_thanos_objstore .Values.ruler.enabled}}
            ruler_storage:
              {{- include "loki.rulerThanosStorageConfig" . | nindent 2 }}
            {{- end }}

            {{- if or .Values.tableManager.retention_deletes_enabled .Values.tableManager.retention_period }}
            table_manager:
              retention_deletes_enabled: {{ .Values.tableManager.retention_deletes_enabled }}
              retention_period: {{ .Values.tableManager.retention_period }}
            {{- end }}

            query_range:
              align_queries_with_step: true
              {{- with .Values.loki.query_range }}
              {{- tpl (. | toYaml) $ | nindent 2 }}
              {{- end }}
              {{- if .Values.resultsCache.enabled }}
              {{- with .Values.resultsCache }}
              cache_results: true
              results_cache:
                cache:
                  default_validity: {{ .defaultValidity }}
                  background:
                    writeback_goroutines: {{ .writebackParallelism }}
                    writeback_buffer: {{ .writebackBuffer }}
                    writeback_size_limit: {{ .writebackSizeLimit }}
                  memcached_client:
                    consistent_hash: true
                    addresses: dnssrvnoa+_memcached-client._tcp.{{ template "loki.fullname" $ }}-results-cache.{{ $.Release.Namespace }}.svc
                    timeout: {{ .timeout }}
                    update_interval: 1m
              {{- end }}
              {{- end }}

            {{- with .Values.loki.storage_config }}
            storage_config:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            {{- with .Values.loki.query_scheduler }}
            query_scheduler:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            {{- with .Values.loki.compactor }}
            compactor:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            {{- with .Values.loki.analytics }}
            analytics:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            {{- if .Values.loki.ui.enabled }}
            ui:
              discovery:
                join_peers:
                  - '{{ include "loki.queryFrontendFullname" . }}.{{ $.Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}'
            {{- end }}
            {{- with .Values.loki.querier }}
            querier:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            {{- with .Values.loki.index_gateway }}
            index_gateway:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            {{- with .Values.loki.frontend }}
            frontend:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            {{- with .Values.loki.frontend_worker }}
            frontend_worker:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            {{- with .Values.loki.distributor }}
            distributor:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            tracing:
              enabled: {{ .Values.loki.tracing.enabled }}

            {{- with .Values.loki.bloom_build }}
            bloom_build:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

            {{- with .Values.loki.bloom_gateway }}
            bloom_gateway:
              {{- tpl (. | toYaml) $ | nindent 4 }}
            {{- end }}

          ui:
            enabled: true
            gateway:
              enabled: true

        gateway:
          enabled: true
          replicas: 1
          service:
            port: 80
            type: LoadBalancer
          ingress:
            enabled: true
            ingressClassName: nginx
            hosts:
              - host: loki-gateway.home.local
                paths:
                  - path: /
                    pathType: Prefix
          basicAuth:
            enabled: false

        minio:
          enabled: true
          replicas: 1
          drivesPerNode: 2
          rootUser: root-user
          rootPassword: supersecretpassword
          users:
            - accessKey: logs-user
              secretKey: supersecretpassword
              policy: readwrite
          buckets:
            - name: chunks
              policy: none
              purge: false
            - name: ruler
              policy: none
              purge: false
            - name: admin
              policy: none
              purge: false
          persistence:
            size: 5Gi
            annotations: {}
          resources:
            requests:
              cpu: 100m
              memory: 128Mi

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
