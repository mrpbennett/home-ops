# ELASTICSEARCH
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
spec:
  destination:
    server: "https://kubernetes.default.svc"
    namespace: elk-stack
  project: default
  source:
    chart: elasticsearch
    repoURL: https://helm.elastic.co
    targetRevision: 8.5.1
    helm:
      valuesObject:
        replicas: 1

        resources:
          requests:
            cpu: "1000m"
            memory: "1Gi"
          limits:
            cpu: "1000m"
            memory: "2Gi"

        volumeClaimTemplate:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi

        service:
          type: LoadBalancer

        ingress:
          enabled: true
          className: nginx
          hosts:
            - host: elasticsearch.70ld.home
              paths:
                - path: /

        networkPolicy:
          http:
            enabled: true

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
# LOGSTASH
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: logstash
  namespace: argocd
spec:
  destination:
    server: "https://kubernetes.default.svc"
    namespace: elk-stack
  project: default
  source:
    chart: logstash
    repoURL: https://helm.elastic.co
    targetRevision: 8.5.1
    helm:
      valuesObject:
        replicas: 1

        resources:
          requests:
            cpu: "100m"
            memory: "1536Mi"
          limits:
            cpu: "1000m"
            memory: "1536Mi"

        service:
          type: LoadBalancer
          ports:
            - name: beats
              port: 5044
              protocol: TCP
              targetPort: 5044
            - name: http
              port: 8080
              protocol: TCP
              targetPort: 8080

        ingress:
          enabled: true
          className: nginx
          hosts:
            - host: logstash.70ld.home
              paths:
                - path: /beats
                  servicePort: 5044
                - path: /http
                  servicePort: 8080

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
# KIBANA
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kibana
  namespace: argocd
spec:
  destination:
    server: "https://kubernetes.default.svc"
    namespace: elk-stack
  project: default
  source:
    chart: kibana
    repoURL: https://helm.elastic.co
    targetRevision: 8.5.1
    helm:
      valuesObject:
        elasticsearchHosts: "http://elasticsearch-master:9200"
        elasticsearchCertificateSecret: elasticsearch-master-certs
        elasticsearchCertificateAuthoritiesFile: ca.crt
        elasticsearchCredentialSecret: elasticsearch-master-credentials

        replicas: 1

        resources:
          requests:
            cpu: "1000m"
            memory: "1Gi"
          limits:
            cpu: "1000m"
            memory: "2Gi"

        protocol: http
        serverHost: "0.0.0.0"
        healthCheckPath: "/app/kibana"

        kibanaConfig:
          kibana.yml: |
            key:
              nestedkey: value

        service:
          type: LoadBalancer

        ingress:
          enabled: true
          className: nginx
          hosts:
            - host: kibana.70ld.home
              paths:
                - path: /

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
