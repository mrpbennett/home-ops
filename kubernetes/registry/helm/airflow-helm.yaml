apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: &chart-name airflow
  namespace: argocd
spec:
  destination:
    server: "https://kubernetes.default.svc"
    namespace: *chart-name
  project: k3s
  source:
    chart: *chart-name
    repoURL: https://airflow.apache.org
    targetRevision: 1.15.0
    helm:
      valuesObject:
        useStandardNaming: true

        uid: 50000
        gid: 0

        airflowHome: /opt/airflow
        defaultAirflowRepository: apache/airflow
        defaultAirflowTag: "2.9.3"
        airflowVersion: "2.9.3"

        ingress:
          web:
            enabled: true
            path: /
            hosts:
              - name: airflow.70ld.home
            ingressClassName: nginx
            tls:
              enabled: false
              secretName: ""

        networkPolicies:
          enabled: false

        airflowLocalSettings: |-
          {{- if semverCompare ">=2.2.0" .Values.airflowVersion }}
          {{- if not (or .Values.webserverSecretKey .Values.webserverSecretKeySecretName) }}
          from airflow.www.utils import UIAlert

          DASHBOARD_UIALERTS = [
            UIAlert(
              'Usage of a dynamic webserver secret key detected. We recommend a static webserver secret key instead.'
              ' See the <a href='
              '"https://airflow.apache.org/docs/helm-chart/stable/production-guide.html#webserver-secret-key" '
              'target="_blank" rel="noopener noreferrer">'
              'Helm Chart Production Guide</a> for more details.',
              category="warning",
              roles=["Admin"],
              html=True,
            )
          ]
          {{- end }}
          {{- end }}

        rbac:
          create: true
          createSCCRoleBinding: false

        enableBuiltInSecretEnvVars:
          AIRFLOW__CORE__FERNET_KEY: true
          # For Airflow <2.3, backward compatibility; moved to [database] in 2.3
          AIRFLOW__CORE__SQL_ALCHEMY_CONN: true
          AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: true
          AIRFLOW_CONN_AIRFLOW_DB: true
          AIRFLOW__WEBSERVER__SECRET_KEY: true
          AIRFLOW__CELERY__CELERY_RESULT_BACKEND: true
          AIRFLOW__CELERY__RESULT_BACKEND: true
          AIRFLOW__CELERY__BROKER_URL: true
          AIRFLOW__ELASTICSEARCH__HOST: true
          AIRFLOW__ELASTICSEARCH__ELASTICSEARCH_HOST: true

        data:
          metadataConnection:
            user: postgres
            pass: postgres
            protocol: postgresql
            host: ~
            port: 5432
            db: postgres
            sslmode: disable

        workers:
          replicas: 1

          persistance:
            enabled: true
            size: 15Gi
            storageClass: longhorn

          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi

          logGroomerSidecar:
            enabled: true
            args: ["bash", "/clean-logs"]

        scheduler:
          enabled: true
          replicas: 1
          args: ["bash", "-c", "exec airflow scheduler"]
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi

        # Installing the Chart with Argo CD, Flux, Rancher or Terraform
        # https://airflow.apache.org/docs/helm-chart/stable/index.html#installing-the-chart-with-argo-cd-flux-rancher-or-terraform

        createUserJob:
          useHelmHooks: false
          applyCustomEnv: false

        migrateDatabaseJob:
          useHelmHooks: false
          applyCustomEnv: false
          jobAnnotations:
            "argocd.argoproj.io/hook": Sync

        webserver:
          enabled: true
          replicas: 1

          defaultUser:
            enabled: true
            role: Admin
            username: admin
            email: pbennett.uk@gmail.com
            firstName: Paul
            lastName: Bennett
            password: admin

            service:
              type: LoadBalancer
              annoations:
                kube-vip.io/loadbalancerIPs: 192.168.5.61
              ports:
                - name: airflow-ui
                  port: 80
                  targetPort: airflow-ui

          trigger:
            enabled: true
            replicas: 1

            persistance:
              enabled: true
              size: 15Gi
              storageClass: longhorn

          redis:
            enabled: true

            persistance:
              enabled: true
              size: 1Gi
              storageClass: longhorn

          dags:
            persistance:
              enabled: false

          logs:
            persistance:
              enabled: false
              size: 15Gi

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
