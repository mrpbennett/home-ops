apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/compare-options: ServerSideDiff=true
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 61.7.1
    helm:
      valuesObject:
        namespaceOverride: "monitoring"

        prometheus:
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            ruleSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 50Gi
            resources:
              requests:
                cpu: 300m
                memory: 2Gi
              limits:
                memory: 2Gi

        alertmanager:
          alertmanagerSpec:
            useExistingSecret: true
            configSecret: alertmanager-secret
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
        grafana:
          persistence:
            enabled: true
            type: sts
            storageClassName: longhorn
            accessModes: ["ReadWriteOnce"]
            size: 20Gi
        kubelet:
          enabled: true
          serviceMonitor:
            relabelings:
              # Fix default kubelet dashboard using wrong instance label value
              - sourceLabels:
                  [
                    __meta_kubernetes_endpoint_address_target_kind,
                    __meta_kubernetes_endpoint_address_target_name,
                  ]
                regex: Node;(.*)
                targetLabel: node
                action: replace
              - sourceLabels: ["node"]
                targetLabel: instance
                action: replace
              - sourceLabels: [__metrics_path__]
                targetLabel: metrics_path
                action: replace
            metricRelabelings:
              # Remove duplicate labels provided by k3s
              - action: keep
                sourceLabels: ["__name__"]
                regex: (apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authentication_token|cadvisor_version|container_blkio|container_cpu|container_fs|container_last|container_memory|container_network|container_oom|container_processes|container|csi_operations|disabled_metric|get_token|go|hidden_metric|kubelet_certificate|kubelet_cgroup|kubelet_container|kubelet_containers|kubelet_cpu|kubelet_device|kubelet_graceful|kubelet_http|kubelet_lifecycle|kubelet_managed|kubelet_node|kubelet_pleg|kubelet_pod|kubelet_run|kubelet_running|kubelet_runtime|kubelet_server|kubelet_started|kubelet_volume|kubernetes_build|kubernetes_feature|machine_cpu|machine_memory|machine_nvm|machine_scrape|node_namespace|plugin_manager|prober_probe|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|storage_operation|volume_manager|volume_operation|workqueue|spegel)_(.+)
              - action: replace
                sourceLabels: ["node"]
                targetLabel: instance
              # Drop high cardinality labels
              - action: labeldrop
                regex: (uid)
              - action: labeldrop
                regex: (id|name)
              - action: drop
                sourceLabels: ["__name__"]
                regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
        kubeApiServer:
          enabled: true
          serviceMonitor:
            metricRelabelings:
              # Remove duplicate labels provided by k3s
              - action: keep
                sourceLabels: ["__name__"]
                regex: (aggregator_openapi|aggregator_unavailable|apiextensions_openapi|apiserver_admission|apiserver_audit|apiserver_cache|apiserver_cel|apiserver_client|apiserver_crd|apiserver_current|apiserver_envelope|apiserver_flowcontrol|apiserver_init|apiserver_kube|apiserver_longrunning|apiserver_request|apiserver_requested|apiserver_response|apiserver_selfrequest|apiserver_storage|apiserver_terminated|apiserver_tls|apiserver_watch|apiserver_webhooks|authenticated_user|authentication|disabled_metric|etcd_bookmark|etcd_lease|etcd_request|field_validation|get_token|go|grpc_client|hidden_metric|kube_apiserver|kubernetes_build|kubernetes_feature|node_authorizer|pod_security|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|serviceaccount_legacy|serviceaccount_stale|serviceaccount_valid|watch_cache|workqueue)_(.+)
              # Drop high cardinality labels
              - action: drop
                sourceLabels: ["__name__"]
                regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
              - action: drop
                sourceLabels: ["__name__"]
                regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
        kubeEtcd:
          enabled: true
          endpoints:
            - 192.168.5.1
            - 192.168.5.2
            - 192.168.5.3
        kubeControllerManager:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeProxy:
          enabled: false

  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
