apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki-stack
  namespace: argocd
spec:
  destination:
    server: "https://kubernetes.default.svc"
    namespace: logging
  project: default
  source:
    chart: loki-stack
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 2.10.2
    helm:
      valuesObject:
        # LOKI ---
        loki:
          enabled: true
          isDefault: true
          url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
          # readinessProbe: {}
          # livenessProbe: {}

          configObjectName: '{{ include "loki.name" . }}'
          generatedConfigObjectName: '{{ include "loki.name" . }}'
          auth_enabled: false

          ui:
            enabled: true
            gateway:
              enabled: true
            frontend:
              scheduler_address: '{{ include "loki.querySchedulerAddress" . }}'
              tail_proxy_url: '{{ include "loki.querierAddress" . }}'
            frontend_worker:
              scheduler_address: '{{ include "loki.querySchedulerAddress" . }}'

          gateway:
            enabled: true
            replica: 1
            containerPort: 8080
            service:
              port: 80
              type: LoadBalancer
            ingress:
              enabled: true
              hosts:
                - host: gateway-loki.home.local
                  paths:
                    - path: /
            basicAuth:
              enabled: false
              username: admin
              password: admin

            # readinessProbe: {}
            nginxConfig:
              schema: http

        # PROMTAIL ---
        promtail:
          enabled: true
          config:
            logLevel: info
            serverPort: 3101
            clients:
              - url: http://{{ .Release.Name }}:3100/loki/api/v1/push

          initContainer:
            - name: init
              image: docker.io/busybox:1.33
              imagePullPolicy: IfNotPresent
              command:
                - sh
                - -c
                - sysctl -w fs.inotify.max_user_instances=512
              securityContext:
                privileged: true

        # FLUENT BIT ---
        fluent-bit:
          enabled: false

        # FILEBEAT ---
        filebeat:
          enabled: false
          filebeatConfig:
            filebeat.yml: |
              # logging.level: debug
              filebeat.inputs:
              - type: container
                paths:
                  - /var/log/containers/*.log
                processors:
                - add_kubernetes_metadata:
                    host: ${NODE_NAME}
                    matchers:
                    - logs_path:
                        logs_path: "/var/log/containers/"
              output.logstash:
                hosts: ["logstash-loki:5044"]

        # LOGSTASH ---
        logstash:
          enabled: false
          image: grafana/logstash-output-loki
          imageTag: 1.0.1
          filters:
            main: |-
              filter {
                if [kubernetes] {
                  mutate {
                    add_field => {
                      "container_name" => "%{[kubernetes][container][name]}"
                      "namespace" => "%{[kubernetes][namespace]}"
                      "pod" => "%{[kubernetes][pod][name]}"
                    }
                    replace => { "host" => "%{[kubernetes][node][name]}"}
                  }
                }
                mutate {
                  remove_field => ["tags"]
                }
              }
          outputs:
            main: |-
              output {
                loki {
                  url => "http://loki:3100/loki/api/v1/push"
                  #username => "test"
                  #password => "test"
                }
                # stdout { codec => rubydebug }
              }

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
