apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cnpg-cluster
  namespace: cnpg-cluster
spec:
  description: "PNFB PostgreSQL Cluster"
  instances: 3
  startDelay: 300
  stopDelay: 300
  primaryUpdateStrategy: unsupervised

  postgresql:
    parameters:
      shared_buffers: 256MB

  bootstrap:
    initdb:
      database: main
      owner: paul
      secret:
        name: cnpg-cluster-user

  enableSuperuserAccess: true
  superuserSecret:
    name: cnpg-cluster-superuser

  managed:
    roles:
      # Role: My personal user
      - name: paul
        ensure: present
        comment: "Paul's CNPG Cluster User"
        login: true
        superuser: true
        passwordSecret:
          name: cnpg-cluster-user

      # Role: Authentik user
      - name: authentik
        ensure: present
        comment: "Simple application user for Authentik"
        login: true
        superuser: true
        passwordSecret:
          name: cnpg-authentik-user

      # Role: Lakekeeper user
      - name: lakekeeper
        ensure: present
        comment: "Lakekeeper DB for managing data lakes"
        login: true
        superuser: true
        passwordSecret:
          name: cnpg-lakekeeper-user

      # Role: Harbor user
      - name: harbor
        ensure: present
        comment: "Harbor DB for managing registry"
        login: true
        superuser: true
        passwordSecret:
          name: cnpg-harbor-user

    services:
      additional:
        - selectorType: rw
          serviceTemplate:
            metadata:
              name: postgres-prod-rw-svc
              annotations:
                metallb.universe.tf/loadBalancerIPs: 192.168.7.80
            spec:
              type: LoadBalancer

  backup:
    retentionPolicy: "7d"
    barmanObjectStore:
      destinationPath: s3://cnpg-cluster
      endpointURL: minio.minio-tenant.svc.cluster.local
      s3Credentials:
        accessKeyId:
          name: cnpg-prod-minio
          key: MINIO_ACCESS_KEY
        secretAccessKey:
          name: cnpg-prod-minio
          key: MINIO_SECRET_KEY

  storage:
    storageClass: longhorn
    size: 20Gi

  resources:
    limits:
      memory: "1Gi"
      cpu: "2"

  affinity:
    enablePodAntiAffinity: true
    topologyKey: failure-domain.beta.kubernetes.io/zone

  monitoring:
    enablePodMonitor: true
